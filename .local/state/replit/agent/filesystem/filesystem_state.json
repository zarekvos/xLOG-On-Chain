{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# replit.md\n\n## Overview\n\nChainBlog is a decentralized blogging platform built on Web3 technology that allows users to publish content permanently on the blockchain. The application enables content creators to write and publish blog posts across multiple EVM-compatible networks (Ethereum, Base, BNB Chain, and Avalanche), ensuring true ownership, censorship resistance, and permanent storage of their content. The platform features a modern React frontend with Web3 wallet integration and a Node.js backend that manages blog post data.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript using Vite as the build tool\n- **UI Components**: Shadcn/ui component library built on Radix UI primitives with Tailwind CSS for styling\n- **Routing**: Wouter for client-side routing (lightweight React router alternative)\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Web3 Integration**: Wagmi for Ethereum interactions and RainbowKit for wallet connection UI\n- **Animation**: Framer Motion for smooth UI animations and transitions\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework using TypeScript\n- **Database**: PostgreSQL with Drizzle ORM for type-safe database operations\n- **Development Storage**: In-memory storage implementation with sample data for development\n- **API Design**: RESTful API endpoints for blog post CRUD operations\n- **Development Server**: Custom Vite integration for hot module replacement in development\n\n### Database Schema\n- **Users Table**: Stores user credentials with username/password authentication\n- **Blog Posts Table**: Contains blog post content, metadata, blockchain transaction details (chain ID, transaction hash), and timestamps\n- **Validation**: Zod schemas for runtime type validation and data integrity\n\n### Authentication & Wallet Integration\n- **Web3 Wallets**: RainbowKit integration supporting major Ethereum wallets\n- **Multi-Chain Support**: Configuration for Ethereum, Base, BNB Chain, and Avalanche networks\n- **Session Management**: Express sessions with PostgreSQL session store\n\n### Development Experience\n- **Hot Reload**: Vite development server with Express backend integration\n- **Type Safety**: Full TypeScript coverage across frontend, backend, and shared schemas\n- **Code Organization**: Monorepo structure with shared types and schemas between client and server\n- **Path Aliases**: Configured TypeScript path mapping for clean imports (@/, @shared/, etc.)\n\n## External Dependencies\n\n### Core Dependencies\n- **@neondatabase/serverless**: PostgreSQL database driver optimized for serverless environments\n- **drizzle-orm**: Type-safe PostgreSQL ORM with zero-runtime overhead\n- **express**: Web application framework for Node.js backend\n- **react**: Frontend UI library with hooks and modern patterns\n- **vite**: Fast build tool and development server\n\n### Web3 & Blockchain\n- **@rainbow-me/rainbowkit**: Wallet connection UI and multi-wallet support\n- **wagmi**: React hooks for Ethereum blockchain interactions\n- **viem**: Low-level Ethereum client library\n\n### UI & Styling\n- **@radix-ui/***: Headless UI primitives for accessible components\n- **tailwindcss**: Utility-first CSS framework\n- **framer-motion**: Animation library for React\n- **lucide-react**: Modern icon library\n\n### Development Tools\n- **typescript**: Static type checking\n- **@tanstack/react-query**: Server state management and caching\n- **wouter**: Lightweight React router\n- **date-fns**: Date manipulation and formatting\n- **zod**: Runtime type validation\n\n### Build & Deployment\n- **esbuild**: Fast JavaScript bundler for server-side code\n- **tsx**: TypeScript execution for development\n- **postcss**: CSS processing with Tailwind CSS","size_bytes":3858},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n        fadeIn: {\n          from: { opacity: \"0\" },\n          to: { opacity: \"1\" },\n        },\n        slideUp: {\n          from: { transform: \"translateY(20px)\", opacity: \"0\" },\n          to: { transform: \"translateY(0)\", opacity: \"1\" },\n        },\n        float: {\n          \"0%, 100%\": { transform: \"translateY(0px)\" },\n          \"50%\": { transform: \"translateY(-10px)\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        \"fade-in\": \"fadeIn 0.6s ease-out\",\n        \"slide-up\": \"slideUp 0.6s ease-out\",\n        \"float\": \"float 3s ease-in-out infinite\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":3280},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { \n  insertBlogPostSchema, \n  insertCategorySchema, \n  insertTagSchema,\n  insertCommentSchema,\n  insertLikeSchema,\n  insertFollowSchema\n} from \"@shared/schema\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Blog Posts API - Enhanced with filtering and advanced features\n  app.get(\"/api/blog-posts\", async (req, res) => {\n    try {\n      const { \n        category, \n        tags, \n        author, \n        featured, \n        trending, \n        limit, \n        offset \n      } = req.query;\n\n      const options: any = {};\n      if (category) options.category = category as string;\n      if (tags) options.tags = (tags as string).split(',');\n      if (author) options.author = author as string;\n      if (featured) options.featured = featured === 'true';\n      if (trending) options.trending = trending === 'true';\n      if (limit) options.limit = parseInt(limit as string);\n      if (offset) options.offset = parseInt(offset as string);\n\n      const posts = await storage.getBlogPosts(options);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch blog posts\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/trending\", async (req, res) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const posts = await storage.getTrendingPosts(limit);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch trending posts\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/featured\", async (req, res) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const posts = await storage.getFeaturedPosts(limit);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured posts\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/search\", async (req, res) => {\n    try {\n      const query = req.query.q as string;\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 20;\n      \n      if (!query) {\n        return res.status(400).json({ message: \"Search query is required\" });\n      }\n\n      const posts = await storage.searchPosts(query, limit);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to search posts\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/:id\", async (req, res) => {\n    try {\n      const post = await storage.getBlogPost(req.params.id);\n      if (!post) {\n        return res.status(404).json({ message: \"Blog post not found\" });\n      }\n      \n      // Increment view count\n      await storage.incrementBlogPostViews(req.params.id);\n      \n      res.json(post);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch blog post\" });\n    }\n  });\n\n  app.post(\"/api/blog-posts\", async (req, res) => {\n    try {\n      const validatedData = insertBlogPostSchema.parse(req.body);\n      const post = await storage.createBlogPost(validatedData);\n      res.status(201).json(post);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid blog post data\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/author/:author\", async (req, res) => {\n    try {\n      const posts = await storage.getBlogPostsByAuthor(req.params.author);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch author posts\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/category/:category\", async (req, res) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const posts = await storage.getPostsByCategory(req.params.category, limit);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch posts by category\" });\n    }\n  });\n\n  app.get(\"/api/blog-posts/tag/:tag\", async (req, res) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const posts = await storage.getPostsByTag(req.params.tag, limit);\n      res.json(posts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch posts by tag\" });\n    }\n  });\n\n  // Categories API\n  app.get(\"/api/categories\", async (req, res) => {\n    try {\n      const categories = await storage.getCategories();\n      res.json(categories);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch categories\" });\n    }\n  });\n\n  app.post(\"/api/categories\", async (req, res) => {\n    try {\n      const validatedData = insertCategorySchema.parse(req.body);\n      const category = await storage.createCategory(validatedData);\n      res.status(201).json(category);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid category data\" });\n    }\n  });\n\n  // Tags API\n  app.get(\"/api/tags\", async (req, res) => {\n    try {\n      const tags = await storage.getTags();\n      res.json(tags);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch tags\" });\n    }\n  });\n\n  app.get(\"/api/tags/trending\", async (req, res) => {\n    try {\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 10;\n      const tags = await storage.getTrendingTags(limit);\n      res.json(tags);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch trending tags\" });\n    }\n  });\n\n  // Comments API\n  app.get(\"/api/comments/post/:postId\", async (req, res) => {\n    try {\n      const comments = await storage.getCommentsByPost(req.params.postId);\n      res.json(comments);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch comments\" });\n    }\n  });\n\n  app.post(\"/api/comments\", async (req, res) => {\n    try {\n      const validatedData = insertCommentSchema.parse(req.body);\n      const comment = await storage.createComment(validatedData);\n      res.status(201).json(comment);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid comment data\" });\n    }\n  });\n\n  // Likes API\n  app.get(\"/api/likes/post/:postId\", async (req, res) => {\n    try {\n      const likes = await storage.getPostLikes(req.params.postId);\n      res.json(likes);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch likes\" });\n    }\n  });\n\n  app.post(\"/api/likes\", async (req, res) => {\n    try {\n      const validatedData = insertLikeSchema.parse(req.body);\n      \n      // Check if like already exists\n      const existingLike = await storage.getLike(\n        validatedData.postId,\n        validatedData.commentId,\n        validatedData.userId,\n        validatedData.walletAddress\n      );\n\n      if (existingLike) {\n        return res.status(409).json({ message: \"Already liked\" });\n      }\n\n      const like = await storage.createLike(validatedData);\n      res.status(201).json(like);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid like data\" });\n    }\n  });\n\n  // AI Recommendations API\n  app.get(\"/api/recommendations\", async (req, res) => {\n    try {\n      const userId = req.query.userId as string;\n      const limit = req.query.limit ? parseInt(req.query.limit as string) : 5;\n      \n      const recommendations = await storage.getAIRecommendations(userId, limit);\n      res.json(recommendations);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch recommendations\" });\n    }\n  });\n\n  // Analytics API\n  app.get(\"/api/analytics/creator/:period?\", async (req, res) => {\n    try {\n      const period = req.params.period || '30d';\n      const userId = req.query.userId as string; // In real app, this would come from auth\n      \n      // For now, return sample analytics data\n      // In real implementation, this would calculate analytics from posts/engagement data\n      const sampleAnalytics = [\n        { date: '2024-01-01', views: 1200, likes: 89, comments: 34, earnings: 45 },\n        { date: '2024-01-02', views: 1567, likes: 134, comments: 67, earnings: 78 },\n        { date: '2024-01-03', views: 2100, likes: 156, comments: 89, earnings: 102 },\n        { date: '2024-01-04', views: 1890, likes: 142, comments: 76, earnings: 89 },\n        { date: '2024-01-05', views: 2450, likes: 198, comments: 123, earnings: 134 },\n        { date: '2024-01-06', views: 3200, likes: 287, comments: 156, earnings: 203 },\n        { date: '2024-01-07', views: 2800, likes: 234, comments: 134, earnings: 167 },\n      ];\n      \n      res.json(sampleAnalytics);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch creator analytics\" });\n    }\n  });\n\n  app.post(\"/api/analytics/update-trending\", async (req, res) => {\n    try {\n      await storage.updateTrendingScores();\n      res.json({ message: \"Trending scores updated successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to update trending scores\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":8970},"server/storage.ts":{"content":"import { \n  type User, \n  type InsertUser, \n  type BlogPost, \n  type InsertBlogPost,\n  type Category,\n  type InsertCategory,\n  type Tag,\n  type InsertTag,\n  type Comment,\n  type InsertComment,\n  type Like,\n  type InsertLike,\n  type Follow,\n  type InsertFollow,\n  type UserAnalytics\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User operations\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByWallet(walletAddress: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUser(id: string, user: Partial<User>): Promise<User | undefined>;\n  getUserAnalytics(userId: string): Promise<UserAnalytics | undefined>;\n  \n  // Blog post operations\n  getBlogPosts(options?: {\n    category?: string;\n    tags?: string[];\n    author?: string;\n    featured?: boolean;\n    trending?: boolean;\n    limit?: number;\n    offset?: number;\n  }): Promise<BlogPost[]>;\n  getBlogPost(id: string): Promise<BlogPost | undefined>;\n  getBlogPostsByAuthor(author: string): Promise<BlogPost[]>;\n  createBlogPost(post: InsertBlogPost): Promise<BlogPost>;\n  updateBlogPost(id: string, post: Partial<BlogPost>): Promise<BlogPost | undefined>;\n  deleteBlogPost(id: string): Promise<boolean>;\n  incrementBlogPostViews(id: string): Promise<void>;\n  getTrendingPosts(limit?: number): Promise<BlogPost[]>;\n  getFeaturedPosts(limit?: number): Promise<BlogPost[]>;\n  getPostsByCategory(category: string, limit?: number): Promise<BlogPost[]>;\n  getPostsByTag(tag: string, limit?: number): Promise<BlogPost[]>;\n  searchPosts(query: string, limit?: number): Promise<BlogPost[]>;\n  \n  // Category operations\n  getCategories(): Promise<Category[]>;\n  getCategory(id: string): Promise<Category | undefined>;\n  createCategory(category: InsertCategory): Promise<Category>;\n  updateCategory(id: string, category: Partial<Category>): Promise<Category | undefined>;\n  \n  // Tag operations\n  getTags(): Promise<Tag[]>;\n  getTag(id: string): Promise<Tag | undefined>;\n  createTag(tag: InsertTag): Promise<Tag>;\n  updateTag(id: string, tag: Partial<Tag>): Promise<Tag | undefined>;\n  getTrendingTags(limit?: number): Promise<Tag[]>;\n  \n  // Comment operations\n  getCommentsByPost(postId: string): Promise<Comment[]>;\n  getComment(id: string): Promise<Comment | undefined>;\n  createComment(comment: InsertComment): Promise<Comment>;\n  updateComment(id: string, comment: Partial<Comment>): Promise<Comment | undefined>;\n  deleteComment(id: string): Promise<boolean>;\n  \n  // Like operations\n  getLike(postId?: string, commentId?: string, userId?: string, walletAddress?: string): Promise<Like | undefined>;\n  createLike(like: InsertLike): Promise<Like>;\n  deleteLike(id: string): Promise<boolean>;\n  getPostLikes(postId: string): Promise<Like[]>;\n  \n  // Follow operations\n  getFollow(followerId: string, followingId: string): Promise<Follow | undefined>;\n  createFollow(follow: InsertFollow): Promise<Follow>;\n  deleteFollow(id: string): Promise<boolean>;\n  getUserFollowers(userId: string): Promise<Follow[]>;\n  getUserFollowing(userId: string): Promise<Follow[]>;\n  \n  // AI and recommendation operations\n  getAIRecommendations(userId?: string, limit?: number): Promise<BlogPost[]>;\n  updateTrendingScores(): Promise<void>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n  private blogPosts: Map<string, BlogPost>;\n  private categories: Map<string, Category>;\n  private tags: Map<string, Tag>;\n  private comments: Map<string, Comment>;\n  private likes: Map<string, Like>;\n  private follows: Map<string, Follow>;\n  private userAnalytics: Map<string, UserAnalytics>;\n\n  constructor() {\n    this.users = new Map();\n    this.blogPosts = new Map();\n    this.categories = new Map();\n    this.tags = new Map();\n    this.comments = new Map();\n    this.likes = new Map();\n    this.follows = new Map();\n    this.userAnalytics = new Map();\n    \n    // Initialize with some sample blog posts\n    this.initializeSampleData();\n  }\n\n  private async initializeSampleData() {\n    // Initialize categories\n    const sampleCategories: Category[] = [\n      {\n        id: randomUUID(),\n        name: \"DeFi\",\n        slug: \"defi\",\n        description: \"Decentralized Finance protocols and innovations\",\n        color: \"#3B82F6\",\n        icon: \"💎\",\n        postCount: 0,\n        createdAt: new Date()\n      },\n      {\n        id: randomUUID(),\n        name: \"NFTs\",\n        slug: \"nft\",\n        description: \"Non-Fungible Tokens and digital art\",\n        color: \"#8B5CF6\",\n        icon: \"🎨\",\n        postCount: 0,\n        createdAt: new Date()\n      },\n      {\n        id: randomUUID(),\n        name: \"Web3\",\n        slug: \"web3\",\n        description: \"Decentralized web technologies\",\n        color: \"#10B981\",\n        icon: \"🌐\",\n        postCount: 0,\n        createdAt: new Date()\n      }\n    ];\n\n    sampleCategories.forEach(category => {\n      this.categories.set(category.id, category);\n    });\n\n    // Initialize tags\n    const sampleTags: Tag[] = [\n      { id: randomUUID(), name: \"ethereum\", slug: \"ethereum\", description: \"Ethereum blockchain\", color: \"#627EEA\", postCount: 0, createdAt: new Date() },\n      { id: randomUUID(), name: \"defi\", slug: \"defi\", description: \"Decentralized Finance\", color: \"#FF6B6B\", postCount: 0, createdAt: new Date() },\n      { id: randomUUID(), name: \"nft\", slug: \"nft\", description: \"Non-Fungible Tokens\", color: \"#4ECDC4\", postCount: 0, createdAt: new Date() },\n      { id: randomUUID(), name: \"web3\", slug: \"web3\", description: \"Web3 Technologies\", color: \"#45B7D1\", postCount: 0, createdAt: new Date() }\n    ];\n\n    sampleTags.forEach(tag => {\n      this.tags.set(tag.id, tag);\n    });\n\n    const samplePosts: BlogPost[] = [\n      {\n        id: randomUUID(),\n        title: \"The Future of Decentralized Content Publishing\",\n        content: \"Exploring how blockchain technology is revolutionizing content creation and ownership in the digital age. This comprehensive analysis covers the technical foundations, economic implications, and social impact of decentralized publishing platforms. We dive deep into smart contracts, tokenomics, and the creator economy.\",\n        excerpt: \"Exploring how blockchain technology is revolutionizing content creation and ownership in the digital age...\",\n        author: \"0xAbcd1234567890abcdef1234567890abcdefEF12\",\n        authorId: undefined,\n        chainId: \"1\",\n        transactionHash: \"0x1234567890abcdef1234567890abcdef12345678\",\n        coverImage: null,\n        tags: [\"ethereum\", \"defi\", \"web3\"],\n        category: \"DeFi\",\n        readingTime: 8,\n        likes: 234,\n        views: 1524,\n        comments: 45,\n        shares: 23,\n        isPinned: false,\n        isFeatured: true,\n        isPublished: true,\n        monetizationEnabled: true,\n        trendingScore: 95,\n        aiGeneratedSummary: \"This article explores the revolutionary impact of blockchain technology on content creation, covering technical foundations, economic models, and social implications of decentralized publishing.\",\n        seoTitle: null,\n        seoDescription: null,\n        createdAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n        updatedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\n        publishedAt: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000)\n      },\n      {\n        id: randomUUID(),\n        title: \"Getting Started with Web3 Blogging\",\n        content: \"A comprehensive guide to publishing your first blog post on the blockchain using ChainBlog. Learn about wallet setup, network selection, gas optimization, and content strategies for decentralized publishing. This tutorial covers everything from technical setup to content strategy.\",\n        excerpt: \"A comprehensive guide to publishing your first blog post on the blockchain using ChainBlog...\",\n        author: \"0x1234567890abcdef1234567890abcdef12345678\",\n        authorId: undefined,\n        chainId: \"8453\",\n        transactionHash: \"0xabcdef1234567890abcdef1234567890abcdef12\",\n        coverImage: null,\n        tags: [\"web3\", \"tutorial\"],\n        category: \"Web3\",\n        readingTime: 6,\n        likes: 156,\n        views: 892,\n        comments: 28,\n        shares: 15,\n        isPinned: false,\n        isFeatured: false,\n        isPublished: true,\n        monetizationEnabled: false,\n        trendingScore: 78,\n        aiGeneratedSummary: \"A complete beginner's guide to Web3 blogging, covering wallet setup, network selection, and publishing strategies on decentralized platforms.\",\n        seoTitle: null,\n        seoDescription: null,\n        createdAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n        updatedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),\n        publishedAt: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000)\n      },\n      {\n        id: randomUUID(),\n        title: \"Why Creators Love Blockchain Technology\",\n        content: \"Discover how content creators are leveraging blockchain technology to monetize their work and maintain creative control. This post explores various monetization strategies, community building techniques, and the economics of creator-owned content. From NFTs to token gating, we cover it all.\",\n        excerpt: \"Discover how content creators are leveraging blockchain technology to monetize their work...\",\n        author: \"0x9ABCdef0123456789ABCdef0123456789ABCdef0\",\n        authorId: undefined,\n        chainId: \"56\",\n        transactionHash: \"0xdef1234567890abcdef1234567890abcdef123456\",\n        coverImage: null,\n        tags: [\"nft\", \"creator-economy\"],\n        category: \"NFTs\",\n        readingTime: 10,\n        likes: 89,\n        views: 456,\n        comments: 12,\n        shares: 8,\n        isPinned: true,\n        isFeatured: false,\n        isPublished: true,\n        monetizationEnabled: true,\n        trendingScore: 65,\n        aiGeneratedSummary: \"An exploration of how blockchain empowers content creators with new monetization models and creative control mechanisms.\",\n        seoTitle: null,\n        seoDescription: null,\n        createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n        updatedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\n        publishedAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n      }\n    ];\n\n    samplePosts.forEach(post => {\n      this.blogPosts.set(post.id, post);\n    });\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n\n  async getBlogPosts(): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values()).sort(\n      (a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0)\n    );\n  }\n\n  async getBlogPost(id: string): Promise<BlogPost | undefined> {\n    return this.blogPosts.get(id);\n  }\n\n  async createBlogPost(insertPost: InsertBlogPost): Promise<BlogPost> {\n    const id = randomUUID();\n    const post: BlogPost = {\n      ...insertPost,\n      id,\n      createdAt: new Date(),\n      transactionHash: insertPost.transactionHash || null,\n    };\n    this.blogPosts.set(id, post);\n    return post;\n  }\n\n  async getBlogPostsByAuthor(author: string): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values())\n      .filter(post => post.author === author)\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0));\n  }\n\n  // Extended User operations\n  async getUserByWallet(walletAddress: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.walletAddress === walletAddress,\n    );\n  }\n\n  async updateUser(id: string, userUpdate: Partial<User>): Promise<User | undefined> {\n    const user = this.users.get(id);\n    if (!user) return undefined;\n    \n    const updatedUser = { ...user, ...userUpdate, updatedAt: new Date() };\n    this.users.set(id, updatedUser);\n    return updatedUser;\n  }\n\n  async getUserAnalytics(userId: string): Promise<UserAnalytics | undefined> {\n    return this.userAnalytics.get(userId);\n  }\n\n  // Extended Blog Post operations\n  async getBlogPosts(options?: {\n    category?: string;\n    tags?: string[];\n    author?: string;\n    featured?: boolean;\n    trending?: boolean;\n    limit?: number;\n    offset?: number;\n  }): Promise<BlogPost[]> {\n    let posts = Array.from(this.blogPosts.values());\n\n    if (options?.category) {\n      posts = posts.filter(post => post.category === options.category);\n    }\n\n    if (options?.tags && options.tags.length > 0) {\n      posts = posts.filter(post => \n        post.tags && options.tags!.some(tag => post.tags!.includes(tag))\n      );\n    }\n\n    if (options?.author) {\n      posts = posts.filter(post => post.author === options.author);\n    }\n\n    if (options?.featured) {\n      posts = posts.filter(post => post.isFeatured);\n    }\n\n    if (options?.trending) {\n      posts = posts.filter(post => post.trendingScore && post.trendingScore > 50);\n      posts.sort((a, b) => (b.trendingScore || 0) - (a.trendingScore || 0));\n    } else {\n      posts.sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0));\n    }\n\n    const offset = options?.offset || 0;\n    const limit = options?.limit || posts.length;\n    \n    return posts.slice(offset, offset + limit);\n  }\n\n  async updateBlogPost(id: string, postUpdate: Partial<BlogPost>): Promise<BlogPost | undefined> {\n    const post = this.blogPosts.get(id);\n    if (!post) return undefined;\n    \n    const updatedPost = { ...post, ...postUpdate, updatedAt: new Date() };\n    this.blogPosts.set(id, updatedPost);\n    return updatedPost;\n  }\n\n  async deleteBlogPost(id: string): Promise<boolean> {\n    return this.blogPosts.delete(id);\n  }\n\n  async incrementBlogPostViews(id: string): Promise<void> {\n    const post = this.blogPosts.get(id);\n    if (post) {\n      post.views = (post.views || 0) + 1;\n      this.blogPosts.set(id, post);\n    }\n  }\n\n  async getTrendingPosts(limit: number = 10): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values())\n      .filter(post => post.trendingScore && post.trendingScore > 0)\n      .sort((a, b) => (b.trendingScore || 0) - (a.trendingScore || 0))\n      .slice(0, limit);\n  }\n\n  async getFeaturedPosts(limit: number = 10): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values())\n      .filter(post => post.isFeatured)\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0))\n      .slice(0, limit);\n  }\n\n  async getPostsByCategory(category: string, limit: number = 10): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values())\n      .filter(post => post.category === category)\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0))\n      .slice(0, limit);\n  }\n\n  async getPostsByTag(tag: string, limit: number = 10): Promise<BlogPost[]> {\n    return Array.from(this.blogPosts.values())\n      .filter(post => post.tags && post.tags.includes(tag))\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0))\n      .slice(0, limit);\n  }\n\n  async searchPosts(query: string, limit: number = 20): Promise<BlogPost[]> {\n    const lowercaseQuery = query.toLowerCase();\n    return Array.from(this.blogPosts.values())\n      .filter(post => \n        post.title.toLowerCase().includes(lowercaseQuery) ||\n        post.content.toLowerCase().includes(lowercaseQuery) ||\n        post.excerpt.toLowerCase().includes(lowercaseQuery) ||\n        (post.tags && post.tags.some(tag => tag.toLowerCase().includes(lowercaseQuery)))\n      )\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0))\n      .slice(0, limit);\n  }\n\n  // Category operations\n  async getCategories(): Promise<Category[]> {\n    return Array.from(this.categories.values())\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n\n  async getCategory(id: string): Promise<Category | undefined> {\n    return this.categories.get(id);\n  }\n\n  async createCategory(insertCategory: InsertCategory): Promise<Category> {\n    const id = randomUUID();\n    const category: Category = {\n      ...insertCategory,\n      id,\n      postCount: 0,\n      createdAt: new Date()\n    };\n    this.categories.set(id, category);\n    return category;\n  }\n\n  async updateCategory(id: string, categoryUpdate: Partial<Category>): Promise<Category | undefined> {\n    const category = this.categories.get(id);\n    if (!category) return undefined;\n    \n    const updatedCategory = { ...category, ...categoryUpdate };\n    this.categories.set(id, updatedCategory);\n    return updatedCategory;\n  }\n\n  // Tag operations\n  async getTags(): Promise<Tag[]> {\n    return Array.from(this.tags.values())\n      .sort((a, b) => (b.postCount || 0) - (a.postCount || 0));\n  }\n\n  async getTag(id: string): Promise<Tag | undefined> {\n    return this.tags.get(id);\n  }\n\n  async createTag(insertTag: InsertTag): Promise<Tag> {\n    const id = randomUUID();\n    const tag: Tag = {\n      ...insertTag,\n      id,\n      postCount: 0,\n      createdAt: new Date()\n    };\n    this.tags.set(id, tag);\n    return tag;\n  }\n\n  async updateTag(id: string, tagUpdate: Partial<Tag>): Promise<Tag | undefined> {\n    const tag = this.tags.get(id);\n    if (!tag) return undefined;\n    \n    const updatedTag = { ...tag, ...tagUpdate };\n    this.tags.set(id, updatedTag);\n    return updatedTag;\n  }\n\n  async getTrendingTags(limit: number = 10): Promise<Tag[]> {\n    return Array.from(this.tags.values())\n      .sort((a, b) => (b.postCount || 0) - (a.postCount || 0))\n      .slice(0, limit);\n  }\n\n  // Comment operations\n  async getCommentsByPost(postId: string): Promise<Comment[]> {\n    return Array.from(this.comments.values())\n      .filter(comment => comment.postId === postId)\n      .sort((a, b) => (b.createdAt?.getTime() || 0) - (a.createdAt?.getTime() || 0));\n  }\n\n  async getComment(id: string): Promise<Comment | undefined> {\n    return this.comments.get(id);\n  }\n\n  async createComment(insertComment: InsertComment): Promise<Comment> {\n    const id = randomUUID();\n    const comment: Comment = {\n      ...insertComment,\n      id,\n      likes: 0,\n      isHighlighted: false,\n      createdAt: new Date(),\n      updatedAt: new Date()\n    };\n    this.comments.set(id, comment);\n    return comment;\n  }\n\n  async updateComment(id: string, commentUpdate: Partial<Comment>): Promise<Comment | undefined> {\n    const comment = this.comments.get(id);\n    if (!comment) return undefined;\n    \n    const updatedComment = { ...comment, ...commentUpdate, updatedAt: new Date() };\n    this.comments.set(id, updatedComment);\n    return updatedComment;\n  }\n\n  async deleteComment(id: string): Promise<boolean> {\n    return this.comments.delete(id);\n  }\n\n  // Like operations\n  async getLike(postId?: string, commentId?: string, userId?: string, walletAddress?: string): Promise<Like | undefined> {\n    return Array.from(this.likes.values()).find(like => {\n      if (postId && like.postId !== postId) return false;\n      if (commentId && like.commentId !== commentId) return false;\n      if (userId && like.userId !== userId) return false;\n      if (walletAddress && like.walletAddress !== walletAddress) return false;\n      return true;\n    });\n  }\n\n  async createLike(insertLike: InsertLike): Promise<Like> {\n    const id = randomUUID();\n    const like: Like = {\n      ...insertLike,\n      id,\n      createdAt: new Date()\n    };\n    this.likes.set(id, like);\n    return like;\n  }\n\n  async deleteLike(id: string): Promise<boolean> {\n    return this.likes.delete(id);\n  }\n\n  async getPostLikes(postId: string): Promise<Like[]> {\n    return Array.from(this.likes.values())\n      .filter(like => like.postId === postId);\n  }\n\n  // Follow operations\n  async getFollow(followerId: string, followingId: string): Promise<Follow | undefined> {\n    return Array.from(this.follows.values())\n      .find(follow => follow.followerId === followerId && follow.followingId === followingId);\n  }\n\n  async createFollow(insertFollow: InsertFollow): Promise<Follow> {\n    const id = randomUUID();\n    const follow: Follow = {\n      ...insertFollow,\n      id,\n      createdAt: new Date()\n    };\n    this.follows.set(id, follow);\n    return follow;\n  }\n\n  async deleteFollow(id: string): Promise<boolean> {\n    return this.follows.delete(id);\n  }\n\n  async getUserFollowers(userId: string): Promise<Follow[]> {\n    return Array.from(this.follows.values())\n      .filter(follow => follow.followingId === userId);\n  }\n\n  async getUserFollowing(userId: string): Promise<Follow[]> {\n    return Array.from(this.follows.values())\n      .filter(follow => follow.followerId === userId);\n  }\n\n  // AI and recommendation operations\n  async getAIRecommendations(userId?: string, limit: number = 5): Promise<BlogPost[]> {\n    // Simple recommendation algorithm based on trending and recent posts\n    const posts = Array.from(this.blogPosts.values());\n    return posts\n      .filter(post => post.isPublished)\n      .sort((a, b) => {\n        const aScore = (a.trendingScore || 0) + (a.likes || 0) + (a.views || 0) / 100;\n        const bScore = (b.trendingScore || 0) + (b.likes || 0) + (b.views || 0) / 100;\n        return bScore - aScore;\n      })\n      .slice(0, limit);\n  }\n\n  async updateTrendingScores(): Promise<void> {\n    const posts = Array.from(this.blogPosts.values());\n    const now = Date.now();\n    \n    posts.forEach(post => {\n      const ageInDays = (now - (post.createdAt?.getTime() || now)) / (1000 * 60 * 60 * 24);\n      const engagementScore = (post.likes || 0) + (post.comments || 0) * 2 + (post.shares || 0) * 3;\n      const viewScore = (post.views || 0) / 100;\n      \n      // Trending score decreases with age but increases with engagement\n      const ageFactor = Math.max(0, 1 - ageInDays / 30); // Decreases over 30 days\n      const trendingScore = Math.min(100, (engagementScore + viewScore) * ageFactor);\n      \n      post.trendingScore = Math.round(trendingScore);\n      this.blogPosts.set(post.id, post);\n    });\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":22299},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, timestamp, integer, boolean, jsonb } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  walletAddress: text(\"wallet_address\"),\n  displayName: text(\"display_name\"),\n  bio: text(\"bio\"),\n  avatar: text(\"avatar\"),\n  website: text(\"website\"),\n  twitter: text(\"twitter\"),\n  isVerified: boolean(\"is_verified\").default(false),\n  totalPosts: integer(\"total_posts\").default(0),\n  totalLikes: integer(\"total_likes\").default(0),\n  followers: integer(\"followers\").default(0),\n  following: integer(\"following\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const blogPosts = pgTable(\"blog_posts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  excerpt: text(\"excerpt\").notNull(),\n  author: text(\"author\").notNull(), // wallet address\n  authorId: varchar(\"author_id\"), // references users.id\n  chainId: text(\"chain_id\").notNull(),\n  transactionHash: text(\"transaction_hash\"),\n  coverImage: text(\"cover_image\"),\n  tags: jsonb(\"tags\").$type<string[]>().default([]),\n  category: text(\"category\"),\n  readingTime: integer(\"reading_time\").default(1),\n  likes: integer(\"likes\").default(0),\n  views: integer(\"views\").default(0),\n  comments: integer(\"comments\").default(0),\n  shares: integer(\"shares\").default(0),\n  isPinned: boolean(\"is_pinned\").default(false),\n  isFeatured: boolean(\"is_featured\").default(false),\n  isPublished: boolean(\"is_published\").default(true),\n  monetizationEnabled: boolean(\"monetization_enabled\").default(false),\n  trendingScore: integer(\"trending_score\").default(0),\n  aiGeneratedSummary: text(\"ai_generated_summary\"),\n  seoTitle: text(\"seo_title\"),\n  seoDescription: text(\"seo_description\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n  publishedAt: timestamp(\"published_at\").defaultNow(),\n});\n\nexport const categories = pgTable(\"categories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull().unique(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  color: text(\"color\").default(\"#8B5CF6\"),\n  icon: text(\"icon\"),\n  postCount: integer(\"post_count\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const tags = pgTable(\"tags\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull().unique(),\n  slug: text(\"slug\").notNull().unique(),\n  description: text(\"description\"),\n  color: text(\"color\").default(\"#6B7280\"),\n  postCount: integer(\"post_count\").default(0),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const comments = pgTable(\"comments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  postId: varchar(\"post_id\").notNull(),\n  authorId: varchar(\"author_id\"),\n  authorWallet: text(\"author_wallet\").notNull(),\n  content: text(\"content\").notNull(),\n  parentId: varchar(\"parent_id\"), // for reply threads\n  likes: integer(\"likes\").default(0),\n  isHighlighted: boolean(\"is_highlighted\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const likes = pgTable(\"likes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  postId: varchar(\"post_id\"),\n  commentId: varchar(\"comment_id\"),\n  userId: varchar(\"user_id\"),\n  walletAddress: text(\"wallet_address\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const follows = pgTable(\"follows\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  followerId: varchar(\"follower_id\").notNull(),\n  followingId: varchar(\"following_id\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const userAnalytics = pgTable(\"user_analytics\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull(),\n  totalViews: integer(\"total_views\").default(0),\n  totalLikes: integer(\"total_likes\").default(0),\n  totalComments: integer(\"total_comments\").default(0),\n  totalShares: integer(\"total_shares\").default(0),\n  totalEarnings: integer(\"total_earnings\").default(0), // in wei\n  monthlyViews: jsonb(\"monthly_views\").$type<Record<string, number>>().default({}),\n  monthlyEarnings: jsonb(\"monthly_earnings\").$type<Record<string, number>>().default({}),\n  topPosts: jsonb(\"top_posts\").$type<string[]>().default([]),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n  walletAddress: true,\n  displayName: true,\n  bio: true,\n  avatar: true,\n  website: true,\n  twitter: true,\n});\n\nexport const insertBlogPostSchema = createInsertSchema(blogPosts).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  publishedAt: true,\n  likes: true,\n  views: true,\n  comments: true,\n  shares: true,\n  trendingScore: true,\n});\n\nexport const insertCategorySchema = createInsertSchema(categories).omit({\n  id: true,\n  postCount: true,\n  createdAt: true,\n});\n\nexport const insertTagSchema = createInsertSchema(tags).omit({\n  id: true,\n  postCount: true,\n  createdAt: true,\n});\n\nexport const insertCommentSchema = createInsertSchema(comments).omit({\n  id: true,\n  likes: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertLikeSchema = createInsertSchema(likes).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertFollowSchema = createInsertSchema(follows).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\nexport type BlogPost = typeof blogPosts.$inferSelect;\nexport type InsertBlogPost = z.infer<typeof insertBlogPostSchema>;\nexport type Category = typeof categories.$inferSelect;\nexport type InsertCategory = z.infer<typeof insertCategorySchema>;\nexport type Tag = typeof tags.$inferSelect;\nexport type InsertTag = z.infer<typeof insertTagSchema>;\nexport type Comment = typeof comments.$inferSelect;\nexport type InsertComment = z.infer<typeof insertCommentSchema>;\nexport type Like = typeof likes.$inferSelect;\nexport type InsertLike = z.infer<typeof insertLikeSchema>;\nexport type Follow = typeof follows.$inferSelect;\nexport type InsertFollow = z.infer<typeof insertFollowSchema>;\nexport type UserAnalytics = typeof userAnalytics.$inferSelect;\n","size_bytes":6802},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { WagmiProvider } from 'wagmi';\nimport { RainbowKitProvider } from '@rainbow-me/rainbowkit';\nimport { config } from './lib/wagmi';\nimport Home from \"@/pages/home\";\nimport Features from \"@/pages/features\";\nimport Blogs from \"@/pages/blogs\";\nimport Docs from \"@/pages/docs\";\nimport Dashboard from \"@/pages/dashboard\";\nimport PostDetail from \"@/pages/post-detail\";\nimport NotFound from \"@/pages/not-found\";\n\nimport '@rainbow-me/rainbowkit/styles.css';\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home} />\n      <Route path=\"/features\" component={Features} />\n      <Route path=\"/blogs\" component={Blogs} />\n      <Route path=\"/docs\" component={Docs} />\n      <Route path=\"/dashboard\" component={Dashboard} />\n      <Route path=\"/post/:id\" component={PostDetail} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <WagmiProvider config={config}>\n      <QueryClientProvider client={queryClient}>\n        <RainbowKitProvider>\n          <TooltipProvider>\n            <Toaster />\n            <Router />\n          </TooltipProvider>\n        </RainbowKitProvider>\n      </QueryClientProvider>\n    </WagmiProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1476},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0 0% 100%);\n  --foreground: hsl(222 84% 4.9%);\n  --card: hsl(0 0% 100%);\n  --card-foreground: hsl(222 84% 4.9%);\n  --popover: hsl(0 0% 100%);\n  --popover-foreground: hsl(222 84% 4.9%);\n  --primary: hsl(262 83% 58%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(210 40% 96%);\n  --secondary-foreground: hsl(222 84% 4.9%);\n  --muted: hsl(210 40% 96%);\n  --muted-foreground: hsl(215 16% 47%);\n  --accent: hsl(262 83% 58%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(214 32% 91%);\n  --input: hsl(214 32% 91%);\n  --ring: hsl(262 83% 58%);\n  --chart-1: hsl(262 83% 58%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(180 6.6667% 97.0588%);\n  --sidebar-foreground: hsl(210 25% 7.8431%);\n  --sidebar-primary: hsl(262 83% 58%);\n  --sidebar-primary-foreground: hsl(210 40% 98%);\n  --sidebar-accent: hsl(211.5789 51.3514% 92.7451%);\n  --sidebar-accent-foreground: hsl(262 83% 58%);\n  --sidebar-border: hsl(205.0000 25.0000% 90.5882%);\n  --sidebar-ring: hsl(262 83% 58%);\n  --font-sans: \"Inter\", system-ui, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: \"JetBrains Mono\", monospace;\n  --radius: 0.75rem;\n  --shadow-2xs: 0px 2px 0px 0px hsl(262 83% 58% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(262 83% 58% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(262 83% 58% / 0.00), 0px 1px 2px -1px hsl(262 83% 58% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(262 83% 58% / 0.00), 0px 1px 2px -1px hsl(262 83% 58% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(262 83% 58% / 0.00), 0px 2px 4px -1px hsl(262 83% 58% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(262 83% 58% / 0.00), 0px 4px 6px -1px hsl(262 83% 58% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(262 83% 58% / 0.00), 0px 8px 10px -1px hsl(262 83% 58% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(262 83% 58% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n}\n\n.dark {\n  --background: hsl(222 84% 4.9%);\n  --foreground: hsl(210 40% 98%);\n  --card: hsl(222 84% 4.9%);\n  --card-foreground: hsl(210 40% 98%);\n  --popover: hsl(222 84% 4.9%);\n  --popover-foreground: hsl(210 40% 98%);\n  --primary: hsl(262 83% 58%);\n  --primary-foreground: hsl(210 40% 98%);\n  --secondary: hsl(217 32% 17%);\n  --secondary-foreground: hsl(210 40% 98%);\n  --muted: hsl(217 32% 17%);\n  --muted-foreground: hsl(215 20% 65%);\n  --accent: hsl(217 32% 17%);\n  --accent-foreground: hsl(210 40% 98%);\n  --destructive: hsl(356.3033 90.5579% 54.3137%);\n  --destructive-foreground: hsl(0 0% 100%);\n  --border: hsl(217 32% 17%);\n  --input: hsl(217 32% 17%);\n  --ring: hsl(262 83% 58%);\n  --chart-1: hsl(262 83% 58%);\n  --chart-2: hsl(159.7826 100% 36.0784%);\n  --chart-3: hsl(42.0290 92.8251% 56.2745%);\n  --chart-4: hsl(147.1429 78.5047% 41.9608%);\n  --chart-5: hsl(341.4894 75.2000% 50.9804%);\n  --sidebar: hsl(222 84% 4.9%);\n  --sidebar-foreground: hsl(210 40% 98%);\n  --sidebar-primary: hsl(262 83% 58%);\n  --sidebar-primary-foreground: hsl(210 40% 98%);\n  --sidebar-accent: hsl(217 32% 17%);\n  --sidebar-accent-foreground: hsl(210 40% 98%);\n  --sidebar-border: hsl(217 32% 17%);\n  --sidebar-ring: hsl(262 83% 58%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n\n  html {\n    scroll-behavior: smooth;\n  }\n}\n\n@layer utilities {\n  .line-clamp-3 {\n    display: -webkit-box;\n    -webkit-line-clamp: 3;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n  }\n}\n\n/* Custom animations */\n@keyframes fadeIn {\n  from { opacity: 0; }\n  to { opacity: 1; }\n}\n\n@keyframes slideUp {\n  from { transform: translateY(20px); opacity: 0; }\n  to { transform: translateY(0); opacity: 1; }\n}\n\n@keyframes float {\n  0%, 100% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n}\n\n@keyframes glow {\n  0%, 100% { box-shadow: 0 0 20px rgba(139, 92, 246, 0.3); }\n  50% { box-shadow: 0 0 40px rgba(139, 92, 246, 0.6); }\n}\n\n@keyframes shimmer {\n  0% { transform: translateX(-100%); }\n  100% { transform: translateX(100%); }\n}\n\n.animate-fade-in {\n  animation: fadeIn 0.6s ease-out;\n}\n\n.animate-slide-up {\n  animation: slideUp 0.6s ease-out;\n}\n\n.animate-float {\n  animation: float 3s ease-in-out infinite;\n}\n\n.animate-glow {\n  animation: glow 2s ease-in-out infinite;\n}\n\n/* Enhanced hover effects */\n.hover-lift {\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.hover-lift:hover {\n  transform: translateY(-8px);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);\n}\n\n/* Gradient text animation */\n.gradient-text {\n  background: linear-gradient(-45deg, #8B5CF6, #3B82F6, #10B981, #F59E0B);\n  background-size: 400% 400%;\n  animation: gradient-shift 4s ease infinite;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n@keyframes gradient-shift {\n  0% { background-position: 0% 50%; }\n  50% { background-position: 100% 50%; }\n  100% { background-position: 0% 50%; }\n}\n\n/* Backdrop blur support */\n.backdrop-blur-xs {\n  backdrop-filter: blur(2px);\n}\n\n.backdrop-blur-3xl {\n  backdrop-filter: blur(64px);\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: hsl(var(--muted));\n}\n\n::-webkit-scrollbar-thumb {\n  background: hsl(var(--primary));\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: hsl(var(--primary) / 0.8);\n}\n","size_bytes":5710},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/blog-section.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useQuery } from '@tanstack/react-query';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { BlogPost } from '@shared/schema';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport function BlogSection() {\n  const { data: blogPosts, isLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts'],\n  });\n\n  const truncateWalletAddress = (address: string) => {\n    if (address.length <= 10) return address;\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  const getChainName = (chainId: string) => {\n    const chainMap: { [key: string]: string } = {\n      '1': 'Ethereum',\n      '8453': 'Base',\n      '56': 'BNB Chain',\n      '43114': 'Avalanche',\n    };\n    return chainMap[chainId] || 'Unknown';\n  };\n\n  if (isLoading) {\n    return (\n      <section id=\"blogs\" className=\"py-20 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-4xl font-bold text-foreground mb-4\">Latest Posts</h2>\n            <p className=\"text-xl text-muted-foreground\">\n              Discover amazing content from our community of Web3 writers\n            </p>\n          </div>\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[...Array(3)].map((_, i) => (\n              <Card key={i} className=\"overflow-hidden\">\n                <div className=\"w-full h-48 bg-muted animate-pulse\" />\n                <CardContent className=\"p-6\">\n                  <div className=\"h-6 bg-muted rounded animate-pulse mb-2\" />\n                  <div className=\"h-4 bg-muted rounded animate-pulse mb-3 w-3/4\" />\n                  <div className=\"h-16 bg-muted rounded animate-pulse\" />\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  return (\n    <section id=\"blogs\" className=\"py-20 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n      <div className=\"max-w-7xl mx-auto\">\n        <motion.div\n          className=\"text-center mb-16\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6 }}\n        >\n          <h2 className=\"text-4xl font-bold text-foreground mb-4\">Latest Posts</h2>\n          <p className=\"text-xl text-muted-foreground\">\n            Discover amazing content from our community of Web3 writers\n          </p>\n        </motion.div>\n\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {blogPosts?.map((post, index) => (\n            <motion.article\n              key={post.id}\n              className=\"group bg-card rounded-2xl border border-border overflow-hidden hover:shadow-lg transition-all duration-300 hover:-translate-y-1\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6, delay: index * 0.1 }}\n              data-testid={`blog-post-${post.id}`}\n            >\n              {/* Placeholder image based on content */}\n              <div className=\"w-full h-48 bg-gradient-to-br from-primary/10 to-purple-600/10 flex items-center justify-center\">\n                <div className=\"w-16 h-16 bg-gradient-to-br from-primary/30 to-purple-600/30 rounded-full flex items-center justify-center\">\n                  <span className=\"text-2xl\">📝</span>\n                </div>\n              </div>\n              \n              <CardContent className=\"p-6\">\n                <h3 className=\"text-xl font-semibold text-foreground mb-2 group-hover:text-primary transition-colors\">\n                  {post.title}\n                </h3>\n                <div className=\"flex items-center space-x-2 text-sm text-muted-foreground mb-3\">\n                  <span className=\"font-mono\" data-testid={`author-${post.id}`}>\n                    {truncateWalletAddress(post.author)}\n                  </span>\n                  <span>•</span>\n                  <span data-testid={`chain-${post.id}`}>\n                    {getChainName(post.chainId)}\n                  </span>\n                  <span>•</span>\n                  <span data-testid={`date-${post.id}`}>\n                    {post.createdAt ? formatDistanceToNow(new Date(post.createdAt), { addSuffix: true }) : 'Unknown'}\n                  </span>\n                </div>\n                <p className=\"text-muted-foreground mb-4 line-clamp-3\">\n                  {post.excerpt}\n                </p>\n                <Button\n                  variant=\"ghost\"\n                  className=\"text-primary hover:text-primary/80 font-medium p-0 h-auto\"\n                  data-testid={`button-read-more-${post.id}`}\n                >\n                  Read More →\n                </Button>\n              </CardContent>\n            </motion.article>\n          ))}\n        </div>\n\n        <motion.div\n          className=\"text-center mt-12\"\n          initial={{ opacity: 0, y: 20 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <Button\n            variant=\"outline\"\n            size=\"lg\"\n            className=\"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-8 py-3 font-medium transition-all\"\n            data-testid=\"button-view-all-posts\"\n          >\n            View All Posts\n          </Button>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":5618},"client/src/components/features-section.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Lock, Link, Shield, Sparkles, ArrowRight } from 'lucide-react';\nimport { supportedChains } from '@/lib/wagmi';\n\nexport function FeaturesSection() {\n  const features = [\n    {\n      icon: Lock,\n      title: 'True Ownership',\n      description: 'Your content lives on the blockchain forever. No platform can delete, modify, or restrict your posts.',\n      gradient: 'from-emerald-500 to-teal-600',\n      details: ['Permanent blockchain storage', 'Immutable content records', 'Zero platform dependency']\n    },\n    {\n      icon: Link,\n      title: 'Multi-Chain Support',\n      description: 'Publish on Ethereum, Base, BNB Chain, and Avalanche. Choose the network that fits your needs.',\n      gradient: 'from-blue-500 to-indigo-600',\n      details: ['4+ EVM networks supported', 'Cross-chain compatibility', 'Flexible network selection']\n    },\n    {\n      icon: Shield,\n      title: 'Censorship Resistant',\n      description: 'Decentralized storage means your voice can never be silenced. Write freely without fear.',\n      gradient: 'from-purple-500 to-pink-600',\n      details: ['Decentralized infrastructure', 'No single point of failure', 'Global content accessibility']\n    },\n  ];\n\n  return (\n    <section id=\"features\" className=\"relative py-32 px-4 sm:px-6 lg:px-8 overflow-hidden\">\n      {/* Background effects */}\n      <div className=\"absolute inset-0 bg-gradient-to-b from-transparent via-muted/30 to-transparent\" />\n      <motion.div\n        className=\"absolute top-20 left-10 w-72 h-72 bg-gradient-to-br from-primary/10 to-purple-500/10 rounded-full blur-3xl\"\n        animate={{\n          scale: [1, 1.2, 1],\n          rotate: [0, 180, 360],\n        }}\n        transition={{\n          duration: 20,\n          repeat: Infinity,\n          ease: 'easeInOut',\n        }}\n      />\n      <motion.div\n        className=\"absolute bottom-20 right-10 w-64 h-64 bg-gradient-to-br from-blue-500/10 to-green-500/10 rounded-full blur-2xl\"\n        animate={{\n          scale: [1, 0.8, 1],\n          rotate: [360, 180, 0],\n        }}\n        transition={{\n          duration: 15,\n          repeat: Infinity,\n          ease: 'easeInOut',\n        }}\n      />\n      \n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <motion.div\n          className=\"text-center mb-20\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.8 }}\n        >\n          <motion.div \n            className=\"flex items-center justify-center mb-6\"\n            initial={{ opacity: 0, scale: 0.8 }}\n            whileInView={{ opacity: 1, scale: 1 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6, delay: 0.2 }}\n          >\n            <div className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-primary/10 to-purple-600/10 rounded-full border border-primary/20\">\n              <Sparkles className=\"w-4 h-4 text-primary\" />\n              <span className=\"text-sm font-medium text-primary\">Powerful Features</span>\n            </div>\n          </motion.div>\n          \n          <h2 className=\"text-5xl md:text-6xl font-bold text-foreground mb-6\">\n            Why Choose \n            <span className=\"bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\"> ChainBlog</span>?\n          </h2>\n          <p className=\"text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n            Experience true digital ownership with our decentralized blogging platform\n          </p>\n        </motion.div>\n\n        <div className=\"grid md:grid-cols-3 gap-8 mb-20\">\n          {features.map((feature, index) => (\n            <motion.div\n              key={feature.title}\n              className=\"group relative\"\n              initial={{ opacity: 0, y: 40 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.8, delay: index * 0.2 }}\n              data-testid={`feature-${feature.title.toLowerCase().replace(' ', '-')}`}\n            >\n              <div className=\"relative bg-card/80 backdrop-blur-sm p-8 rounded-3xl border border-border/50 text-center hover:shadow-2xl hover:shadow-primary/10 transition-all duration-500 hover:-translate-y-3 overflow-hidden\">\n                {/* Background gradient effect */}\n                <div className={`absolute inset-0 bg-gradient-to-br ${feature.gradient} opacity-0 group-hover:opacity-5 transition-opacity duration-500 rounded-3xl`} />\n                \n                {/* Icon */}\n                <motion.div \n                  className={`w-20 h-20 bg-gradient-to-br ${feature.gradient} rounded-2xl flex items-center justify-center mx-auto mb-8 shadow-lg`}\n                  whileHover={{ \n                    scale: 1.1,\n                    rotate: 5,\n                  }}\n                  transition={{ duration: 0.3 }}\n                >\n                  <feature.icon className=\"w-10 h-10 text-white\" />\n                </motion.div>\n                \n                {/* Content */}\n                <h3 className=\"text-2xl font-bold text-foreground mb-4 group-hover:text-primary transition-colors duration-300\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-muted-foreground leading-relaxed mb-6\">\n                  {feature.description}\n                </p>\n                \n                {/* Feature details */}\n                <div className=\"space-y-2\">\n                  {feature.details.map((detail, i) => (\n                    <motion.div\n                      key={i}\n                      className=\"flex items-center justify-center text-sm text-muted-foreground/80\"\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      viewport={{ once: true }}\n                      transition={{ duration: 0.5, delay: index * 0.1 + i * 0.1 }}\n                    >\n                      <ArrowRight className=\"w-3 h-3 text-primary mr-2 flex-shrink-0\" />\n                      {detail}\n                    </motion.div>\n                  ))}\n                </div>\n\n                {/* Hover effect border */}\n                <div className={`absolute inset-0 rounded-3xl border-2 border-transparent group-hover:border-gradient-to-r group-hover:${feature.gradient} opacity-0 group-hover:opacity-100 transition-opacity duration-500`} />\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          className=\"relative bg-gradient-to-r from-primary/10 to-purple-600/10 rounded-3xl p-12 text-center border border-primary/20 overflow-hidden\"\n          initial={{ opacity: 0, y: 30 }}\n          whileInView={{ opacity: 1, y: 0 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.8, delay: 0.4 }}\n          data-testid=\"supported-networks\"\n        >\n          {/* Background pattern */}\n          <div className=\"absolute inset-0 opacity-5\">\n            <div className=\"absolute inset-0\" style={{\n              backgroundImage: `radial-gradient(circle at 1px 1px, hsl(var(--primary)) 1px, transparent 0)`,\n              backgroundSize: '20px 20px'\n            }} />\n          </div>\n          \n          <div className=\"relative z-10\">\n            <motion.h3 \n              className=\"text-4xl font-bold text-foreground mb-8\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6, delay: 0.6 }}\n            >\n              Supported \n              <span className=\"bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\"> Networks</span>\n            </motion.h3>\n            \n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n              {supportedChains.map((chain, index) => (\n                <motion.div\n                  key={chain.id}\n                  className=\"group flex flex-col items-center space-y-4 p-6 rounded-2xl bg-white/5 backdrop-blur-sm border border-white/10 hover:border-primary/30 hover:bg-white/10 transition-all duration-300\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.6, delay: 0.8 + index * 0.1 }}\n                  whileHover={{ \n                    scale: 1.05,\n                    y: -5\n                  }}\n                >\n                  <motion.div \n                    className={`w-12 h-12 ${chain.color} rounded-full shadow-lg`}\n                    whileHover={{ \n                      scale: 1.2,\n                      boxShadow: \"0 10px 20px rgba(0,0,0,0.2)\"\n                    }}\n                  />\n                  <span className=\"font-semibold text-foreground group-hover:text-primary transition-colors duration-300\">\n                    {chain.name}\n                  </span>\n                </motion.div>\n              ))}\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":9196},"client/src/components/footer.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Github, Twitter } from 'lucide-react';\nimport logoPath from '@assets/image_1758797917332.png';\n\nexport function Footer() {\n  const footerLinks = {\n    Product: [\n      { name: 'Features', href: '#features' },\n      { name: 'Pricing', href: '#pricing' },\n      { name: 'Roadmap', href: '#roadmap' },\n    ],\n    Resources: [\n      { name: 'Documentation', href: '#docs' },\n      { name: 'API Reference', href: '#api' },\n      { name: 'Support', href: '#support' },\n    ],\n    Community: [\n      { name: 'GitHub', href: 'https://github.com', icon: Github },\n      { name: 'Twitter', href: 'https://twitter.com', icon: Twitter },\n      { name: 'Discord', href: 'https://discord.com' },\n    ],\n  };\n\n  return (\n    <footer className=\"bg-foreground text-white py-16 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"grid md:grid-cols-4 gap-8 mb-8\">\n          {/* Brand */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <img \n                src={logoPath} \n                alt=\"ChainBlog Logo\" \n                className=\"w-8 h-8 object-contain\"\n              />\n              <span className=\"text-xl font-bold\">ChainBlog</span>\n            </div>\n            <p className=\"text-gray-400 leading-relaxed\">\n              The future of decentralized blogging. Own your content forever on the blockchain.\n            </p>\n          </motion.div>\n\n          {/* Footer Links */}\n          {Object.entries(footerLinks).map(([category, links], categoryIndex) => (\n            <motion.div\n              key={category}\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6, delay: (categoryIndex + 1) * 0.1 }}\n            >\n              <h4 className=\"font-semibold mb-4\">{category}</h4>\n              <div className=\"space-y-2\">\n                {links.map((link) => (\n                  <a\n                    key={link.name}\n                    href={link.href}\n                    className=\"flex items-center space-x-2 text-gray-400 hover:text-white transition-colors\"\n                    data-testid={`footer-link-${link.name.toLowerCase().replace(' ', '-')}`}\n                  >\n                    {'icon' in link && link.icon && <link.icon className=\"h-4 w-4\" />}\n                    <span>{link.name}</span>\n                  </a>\n                ))}\n              </div>\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          className=\"border-t border-gray-800 pt-8\"\n          initial={{ opacity: 0 }}\n          whileInView={{ opacity: 1 }}\n          viewport={{ once: true }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n        >\n          <div className=\"flex flex-col md:flex-row justify-between items-center\">\n            <p className=\"text-gray-400 text-sm\">\n              © 2024 ChainBlog. All rights reserved.\n            </p>\n            <div className=\"flex space-x-6 mt-4 md:mt-0\">\n              <a\n                href=\"#privacy\"\n                className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                data-testid=\"footer-link-privacy\"\n              >\n                Privacy Policy\n              </a>\n              <a\n                href=\"#terms\"\n                className=\"text-gray-400 hover:text-white transition-colors text-sm\"\n                data-testid=\"footer-link-terms\"\n              >\n                Terms of Service\n              </a>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3870},"client/src/components/hero-section.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Button } from '@/components/ui/button';\nimport { WalletConnect } from './wallet-connect';\nimport { Sparkles, ArrowRight, Play } from 'lucide-react';\n\nexport function HeroSection() {\n  const stats = [\n    { value: '∞', label: 'Forever Storage' },\n    { value: '4+', label: 'EVM Networks' },\n    { value: '0%', label: 'Censorship' },\n    { value: '100%', label: 'Your Content' },\n  ];\n\n  return (\n    <section className=\"relative pt-32 pb-24 px-4 sm:px-6 lg:px-8 overflow-hidden\">\n      {/* Enhanced Background with multiple gradients */}\n      <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-purple-500/8 to-blue-500/5 pointer-events-none\" />\n      <div className=\"absolute inset-0 bg-gradient-to-tl from-orange-500/5 via-transparent to-green-500/5 pointer-events-none\" />\n      \n      {/* Animated grid background */}\n      <div className=\"absolute inset-0 opacity-[0.02]\">\n        <div className=\"absolute inset-0\" style={{\n          backgroundImage: `linear-gradient(to right, hsl(var(--foreground)) 1px, transparent 1px),\n                           linear-gradient(to bottom, hsl(var(--foreground)) 1px, transparent 1px)`,\n          backgroundSize: '50px 50px'\n        }} />\n      </div>\n      \n      {/* Enhanced floating shapes */}\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        <motion.div\n          className=\"absolute w-96 h-96 bg-gradient-to-br from-primary/15 to-purple-500/10 rounded-full blur-3xl\"\n          style={{ top: '5%', right: '5%' }}\n          animate={{\n            y: [0, -30, 0],\n            x: [0, 20, 0],\n            rotate: [0, 180, 360],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 12,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n        <motion.div\n          className=\"absolute w-64 h-64 bg-gradient-to-br from-blue-500/10 to-primary/15 rounded-full blur-2xl\"\n          style={{ bottom: '10%', left: '0%' }}\n          animate={{\n            y: [0, 25, 0],\n            x: [0, -15, 0],\n            rotate: [360, 180, 0],\n            scale: [1, 0.8, 1],\n          }}\n          transition={{\n            duration: 10,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n        <motion.div\n          className=\"absolute w-40 h-40 bg-gradient-to-br from-orange-500/10 to-yellow-500/10 rounded-full blur-xl\"\n          style={{ top: '60%', right: '20%' }}\n          animate={{\n            y: [0, -15, 0],\n            rotate: [0, 270, 360],\n          }}\n          transition={{\n            duration: 8,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n      </div>\n\n      <div className=\"max-w-7xl mx-auto relative z-10\">\n        <div className=\"text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, ease: \"easeOut\" }}\n          >\n            <motion.div \n              className=\"flex items-center justify-center mb-8\"\n              initial={{ opacity: 0, scale: 0.8 }}\n              animate={{ opacity: 1, scale: 1 }}\n              transition={{ duration: 0.6, delay: 0.2 }}\n            >\n              <div className=\"flex items-center gap-2 px-4 py-2 bg-gradient-to-r from-primary/10 to-purple-600/10 rounded-full border border-primary/20\">\n                <Sparkles className=\"w-4 h-4 text-primary\" />\n                <span className=\"text-sm font-medium text-primary\">Powered by Web3 Technology</span>\n              </div>\n            </motion.div>\n            \n            <h1 className=\"text-6xl md:text-8xl lg:text-9xl font-bold text-foreground mb-8 leading-[0.9]\">\n              <motion.span\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.3 }}\n                className=\"block\"\n              >\n                Decentralized\n              </motion.span>\n              <br />\n              <motion.span\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.4 }}\n                className=\"bg-gradient-to-r from-primary via-purple-600 to-blue-600 bg-clip-text text-transparent relative\"\n              >\n                Blogging\n                <motion.div\n                  className=\"absolute -inset-2 bg-gradient-to-r from-primary/20 to-purple-600/20 blur-2xl -z-10\"\n                  animate={{\n                    opacity: [0.5, 0.8, 0.5],\n                  }}\n                  transition={{\n                    duration: 3,\n                    repeat: Infinity,\n                    ease: 'easeInOut',\n                  }}\n                />\n              </motion.span>\n              <br />\n              <motion.span\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: 0.5 }}\n                className=\"block\"\n              >\n                on EVM Chains\n              </motion.span>\n            </h1>\n            \n            <motion.p \n              className=\"text-2xl text-muted-foreground mb-12 max-w-3xl mx-auto leading-relaxed\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6, delay: 0.6 }}\n            >\n              Own your content forever. Publish on-chain with full control and censorship resistance across multiple EVM networks.\n            </motion.p>\n          </motion.div>\n\n          <motion.div\n            className=\"flex flex-col sm:flex-row gap-6 justify-center items-center mb-20\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.7 }}\n          >\n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button\n                size=\"lg\"\n                className=\"group bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90 text-primary-foreground shadow-2xl hover:shadow-3xl transition-all duration-500 hover:-translate-y-1 px-12 py-6 text-xl font-bold rounded-2xl\"\n                data-testid=\"button-start-blogging\"\n              >\n                Start Blogging\n                <ArrowRight className=\"w-6 h-6 ml-3 group-hover:translate-x-1 transition-transform duration-300\" />\n              </Button>\n            </motion.div>\n            \n            <motion.div\n              whileHover={{ scale: 1.05 }}\n              whileTap={{ scale: 0.95 }}\n            >\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"group border-2 border-primary/30 text-foreground hover:bg-primary/10 hover:border-primary/50 shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 px-8 py-6 text-lg font-semibold rounded-2xl backdrop-blur-sm bg-white/10\"\n                data-testid=\"button-watch-demo\"\n              >\n                <Play className=\"w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-300\" />\n                Watch Demo\n              </Button>\n            </motion.div>\n            \n            <div className=\"sm:hidden lg:block\">\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: 0.8 }}\n              >\n                <WalletConnect />\n              </motion.div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            className=\"grid grid-cols-2 md:grid-cols-4 gap-8 text-center\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.9 }}\n          >\n            {stats.map((stat, index) => (\n              <motion.div\n                key={stat.label}\n                className=\"group p-6 rounded-2xl bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-sm border border-white/10 hover:border-primary/30 transition-all duration-500 hover:scale-105 hover:-translate-y-1\"\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ duration: 0.6, delay: 0.9 + index * 0.1 }}\n                whileHover={{ \n                  boxShadow: \"0 20px 40px rgba(139, 92, 246, 0.3)\"\n                }}\n                data-testid={`stat-${stat.label.toLowerCase().replace(' ', '-')}`}\n              >\n                <motion.div \n                  className=\"text-4xl md:text-5xl font-bold bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent mb-3\"\n                  whileHover={{ scale: 1.1 }}\n                >\n                  {stat.value}\n                </motion.div>\n                <div className=\"text-base font-medium text-muted-foreground group-hover:text-foreground transition-colors duration-300\">\n                  {stat.label}\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":9328},"client/src/components/navigation.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'wouter';\nimport { WalletConnect } from './wallet-connect';\nimport { Button } from '@/components/ui/button';\nimport { Menu, X } from 'lucide-react';\nimport logoPath from '@assets/image_1758797917332.png';\n\nexport function Navigation() {\n  const [location] = useLocation();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const navLinks = [\n    { href: '/features', label: 'Features' },\n    { href: '/blogs', label: 'Blogs' },\n    { href: '/docs', label: 'Docs' },\n    { href: '/dashboard', label: 'Dashboard' },\n  ];\n\n  return (\n    <nav \n      className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n        isScrolled \n          ? 'bg-white/95 backdrop-blur-md border-b border-border shadow-sm' \n          : 'bg-white/80 backdrop-blur-md border-b border-border'\n      }`}\n      data-testid=\"navigation\"\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3\" data-testid=\"link-home\">\n            <img \n              src={logoPath} \n              alt=\"ChainBlog Logo\" \n              className=\"w-8 h-8 object-contain\"\n            />\n            <span className=\"text-xl font-bold text-foreground\">ChainBlog</span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navLinks.map((link) => (\n              <Link\n                key={link.href}\n                href={link.href}\n                className={`text-muted-foreground hover:text-foreground transition-colors ${\n                  location === link.href ? 'text-foreground font-semibold' : ''\n                }`}\n                data-testid={`link-${link.label.toLowerCase()}`}\n              >\n                {link.label}\n              </Link>\n            ))}\n          </div>\n\n          {/* Desktop Wallet Connect */}\n          <div className=\"hidden md:flex items-center space-x-4\">\n            <WalletConnect />\n          </div>\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"md:hidden\"\n            onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            data-testid=\"button-mobile-menu\"\n          >\n            {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n          </Button>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden border-t border-border bg-white/95 backdrop-blur-md\">\n            <div className=\"px-2 pt-2 pb-3 space-y-1\">\n              {navLinks.map((link) => (\n                <Link\n                  key={link.href}\n                  href={link.href}\n                  className={`block px-3 py-2 text-muted-foreground hover:text-foreground transition-colors ${\n                    location === link.href ? 'text-foreground font-semibold' : ''\n                  }`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  data-testid={`mobile-link-${link.label.toLowerCase()}`}\n                >\n                  {link.label}\n                </Link>\n              ))}\n              <div className=\"px-3 py-2\">\n                <WalletConnect />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":3783},"client/src/components/wallet-connect.tsx":{"content":"import { ConnectButton } from '@rainbow-me/rainbowkit';\nimport { Button } from '@/components/ui/button';\n\nexport function WalletConnect() {\n  return (\n    <ConnectButton.Custom>\n      {({\n        account,\n        chain,\n        openAccountModal,\n        openChainModal,\n        openConnectModal,\n        authenticationStatus,\n        mounted,\n      }) => {\n        const ready = mounted && authenticationStatus !== 'loading';\n        const connected =\n          ready &&\n          account &&\n          chain &&\n          (!authenticationStatus ||\n            authenticationStatus === 'authenticated');\n\n        return (\n          <div\n            {...(!ready && {\n              'aria-hidden': true,\n              style: {\n                opacity: 0,\n                pointerEvents: 'none',\n                userSelect: 'none',\n              },\n            })}\n          >\n            {(() => {\n              if (!connected) {\n                return (\n                  <Button\n                    onClick={openConnectModal}\n                    className=\"bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90 text-primary-foreground shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5\"\n                    data-testid=\"button-connect-wallet\"\n                  >\n                    Connect Wallet\n                  </Button>\n                );\n              }\n\n              if (chain.unsupported) {\n                return (\n                  <Button\n                    onClick={openChainModal}\n                    variant=\"destructive\"\n                    data-testid=\"button-wrong-network\"\n                  >\n                    Wrong network\n                  </Button>\n                );\n              }\n\n              return (\n                <div className=\"flex items-center gap-2\">\n                  <Button\n                    onClick={openChainModal}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    className=\"hidden md:flex\"\n                    data-testid=\"button-chain-selector\"\n                  >\n                    {chain.hasIcon && (\n                      <div\n                        style={{\n                          background: chain.iconBackground,\n                          width: 12,\n                          height: 12,\n                          borderRadius: 999,\n                          overflow: 'hidden',\n                          marginRight: 4,\n                        }}\n                      >\n                        {chain.iconUrl && (\n                          <img\n                            alt={chain.name ?? 'Chain icon'}\n                            src={chain.iconUrl}\n                            style={{ width: 12, height: 12 }}\n                          />\n                        )}\n                      </div>\n                    )}\n                    {chain.name}\n                  </Button>\n\n                  <Button\n                    onClick={openAccountModal}\n                    variant=\"outline\"\n                    className=\"text-sm font-mono\"\n                    data-testid=\"button-account\"\n                  >\n                    {account.displayName}\n                  </Button>\n                </div>\n              );\n            })()}\n          </div>\n        );\n      }}\n    </ConnectButton.Custom>\n  );\n}\n","size_bytes":3377},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/lib/wagmi.ts":{"content":"import { getDefaultConfig } from '@rainbow-me/rainbowkit';\nimport { mainnet, base, bsc, avalanche } from 'viem/chains';\n\nexport const config = getDefaultConfig({\n  appName: 'ChainBlog',\n  projectId: import.meta.env.VITE_WALLET_CONNECT_PROJECT_ID || 'your-project-id',\n  chains: [mainnet, base, bsc, avalanche],\n  ssr: false,\n});\n\nexport const supportedChains = [\n  {\n    id: mainnet.id,\n    name: 'Ethereum',\n    color: 'bg-blue-500',\n  },\n  {\n    id: base.id,\n    name: 'Base',\n    color: 'bg-blue-600',\n  },\n  {\n    id: bsc.id,\n    name: 'BNB Chain',\n    color: 'bg-yellow-500',\n  },\n  {\n    id: avalanche.id,\n    name: 'Avalanche',\n    color: 'bg-red-500',\n  },\n];\n","size_bytes":668},"client/src/pages/home.tsx":{"content":"import { Navigation } from '@/components/navigation';\nimport { HeroSection } from '@/components/hero-section';\nimport { FeaturesSection } from '@/components/features-section';\nimport { BlogSection } from '@/components/blog-section';\nimport { Footer } from '@/components/footer';\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <HeroSection />\n      <FeaturesSection />\n      <BlogSection />\n      <Footer />\n    </div>\n  );\n}\n","size_bytes":499},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/pages/blogs.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Navigation } from '@/components/navigation';\nimport { Footer } from '@/components/footer';\nimport { AdvancedDiscovery } from '@/components/advanced-discovery';\nimport { useQuery } from '@tanstack/react-query';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { BlogPost } from '@shared/schema';\nimport { formatDistanceToNow } from 'date-fns';\nimport { Search, Filter, TrendingUp, Clock, User, ExternalLink, Sparkles } from 'lucide-react';\nimport { useState } from 'react';\n\nexport default function Blogs() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedChain, setSelectedChain] = useState<string | null>(null);\n\n  const { data: blogPosts, isLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts'],\n  });\n\n  const truncateWalletAddress = (address: string) => {\n    if (address.length <= 10) return address;\n    return `${address.slice(0, 6)}...${address.slice(-4)}`;\n  };\n\n  const getChainName = (chainId: string) => {\n    const chainMap: { [key: string]: string } = {\n      '1': 'Ethereum',\n      '8453': 'Base',\n      '56': 'BNB Chain',\n      '43114': 'Avalanche',\n    };\n    return chainMap[chainId] || 'Unknown';\n  };\n\n  const getChainColor = (chainId: string) => {\n    const colorMap: { [key: string]: string } = {\n      '1': 'bg-blue-500',\n      '8453': 'bg-blue-600',\n      '56': 'bg-yellow-500',\n      '43114': 'bg-red-500',\n    };\n    return colorMap[chainId] || 'bg-gray-500';\n  };\n\n  const filteredPosts = blogPosts?.filter(post => {\n    const matchesSearch = post.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         post.excerpt.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesChain = !selectedChain || post.chainId === selectedChain;\n    return matchesSearch && matchesChain;\n  });\n\n  const chains = [\n    { id: '1', name: 'Ethereum', color: 'bg-blue-500' },\n    { id: '8453', name: 'Base', color: 'bg-blue-600' },\n    { id: '56', name: 'BNB Chain', color: 'bg-yellow-500' },\n    { id: '43114', name: 'Avalanche', color: 'bg-red-500' },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Enhanced Discovery Section */}\n      <section className=\"pt-20\">\n        <AdvancedDiscovery />\n      </section>\n\n      {/* Search and Filter Section */}\n      <section className=\"py-12 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"flex flex-col lg:flex-row gap-6 items-center justify-between\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"relative flex-1 max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search posts...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"pl-10 py-3 text-lg\"\n                data-testid=\"search-input\"\n              />\n            </div>\n            \n            <div className=\"flex flex-wrap gap-2 items-center\">\n              <Filter className=\"w-5 h-5 text-muted-foreground mr-2\" />\n              <Button\n                variant={selectedChain === null ? \"default\" : \"outline\"}\n                size=\"sm\"\n                onClick={() => setSelectedChain(null)}\n                className=\"transition-all duration-200\"\n              >\n                All Chains\n              </Button>\n              {chains.map(chain => (\n                <Button\n                  key={chain.id}\n                  variant={selectedChain === chain.id ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => setSelectedChain(chain.id)}\n                  className=\"flex items-center gap-2 transition-all duration-200\"\n                >\n                  <div className={`w-3 h-3 ${chain.color} rounded-full`} />\n                  {chain.name}\n                </Button>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Featured Stats */}\n      <section className=\"py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-8\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <Card className=\"p-6 bg-gradient-to-br from-primary/10 to-purple-600/10 border-primary/20\">\n              <CardContent className=\"p-0 text-center\">\n                <TrendingUp className=\"w-8 h-8 text-primary mx-auto mb-4\" />\n                <h3 className=\"text-2xl font-bold text-foreground mb-2\">{blogPosts?.length || 0}</h3>\n                <p className=\"text-muted-foreground\">Published Posts</p>\n              </CardContent>\n            </Card>\n            <Card className=\"p-6 bg-gradient-to-br from-purple-600/10 to-primary/10 border-purple-600/20\">\n              <CardContent className=\"p-0 text-center\">\n                <User className=\"w-8 h-8 text-purple-600 mx-auto mb-4\" />\n                <h3 className=\"text-2xl font-bold text-foreground mb-2\">3</h3>\n                <p className=\"text-muted-foreground\">Active Authors</p>\n              </CardContent>\n            </Card>\n            <Card className=\"p-6 bg-gradient-to-br from-green-500/10 to-blue-500/10 border-green-500/20\">\n              <CardContent className=\"p-0 text-center\">\n                <Clock className=\"w-8 h-8 text-green-500 mx-auto mb-4\" />\n                <h3 className=\"text-2xl font-bold text-foreground mb-2\">4</h3>\n                <p className=\"text-muted-foreground\">Blockchains</p>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Blog Posts Grid */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Latest Posts</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Dive into the world of decentralized content and Web3 innovation\n            </p>\n          </motion.div>\n\n          {isLoading ? (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {[...Array(6)].map((_, i) => (\n                <Card key={i} className=\"overflow-hidden\">\n                  <div className=\"w-full h-48 bg-muted animate-pulse\" />\n                  <CardContent className=\"p-6\">\n                    <div className=\"h-6 bg-muted rounded animate-pulse mb-2\" />\n                    <div className=\"h-4 bg-muted rounded animate-pulse mb-3 w-3/4\" />\n                    <div className=\"h-16 bg-muted rounded animate-pulse\" />\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          ) : (\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n              {filteredPosts?.map((post, index) => (\n                <motion.article\n                  key={post.id}\n                  className=\"group bg-card/80 backdrop-blur-sm rounded-3xl border border-border/50 overflow-hidden hover:shadow-2xl hover:shadow-primary/10 transition-all duration-500 hover:-translate-y-2\"\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.6, delay: index * 0.1 }}\n                  whileHover={{ scale: 1.02 }}\n                  data-testid={`blog-post-${post.id}`}\n                >\n                  {/* Post Image */}\n                  <div className=\"w-full h-48 bg-gradient-to-br from-primary/20 to-purple-600/20 flex items-center justify-center relative overflow-hidden\">\n                    <div className=\"w-20 h-20 bg-gradient-to-br from-primary/40 to-purple-600/40 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform duration-300\">\n                      <span className=\"text-3xl\">📝</span>\n                    </div>\n                    <div className=\"absolute top-4 right-4\">\n                      <Badge \n                        className={`${getChainColor(post.chainId)} text-white border-0`}\n                        data-testid={`chain-${post.id}`}\n                      >\n                        {getChainName(post.chainId)}\n                      </Badge>\n                    </div>\n                  </div>\n                  \n                  <CardContent className=\"p-8\">\n                    <h3 className=\"text-xl font-bold text-foreground mb-3 group-hover:text-primary transition-colors line-clamp-2\">\n                      {post.title}\n                    </h3>\n                    \n                    <div className=\"flex items-center space-x-3 text-sm text-muted-foreground mb-4\">\n                      <div className=\"flex items-center space-x-1\">\n                        <User className=\"w-4 h-4\" />\n                        <span className=\"font-mono\" data-testid={`author-${post.id}`}>\n                          {truncateWalletAddress(post.author)}\n                        </span>\n                      </div>\n                      <span>•</span>\n                      <div className=\"flex items-center space-x-1\">\n                        <Clock className=\"w-4 h-4\" />\n                        <span data-testid={`date-${post.id}`}>\n                          {post.createdAt ? formatDistanceToNow(new Date(post.createdAt), { addSuffix: true }) : 'Unknown'}\n                        </span>\n                      </div>\n                    </div>\n                    \n                    <p className=\"text-muted-foreground mb-6 line-clamp-3 leading-relaxed\">\n                      {post.excerpt}\n                    </p>\n                    \n                    <Button\n                      variant=\"ghost\"\n                      className=\"text-primary hover:text-primary/80 font-medium p-0 h-auto group/btn\"\n                      data-testid={`button-read-more-${post.id}`}\n                    >\n                      Read Full Article\n                      <ExternalLink className=\"w-4 h-4 ml-2 group-hover/btn:translate-x-1 transition-transform duration-200\" />\n                    </Button>\n                  </CardContent>\n                </motion.article>\n              ))}\n            </div>\n          )}\n\n          {filteredPosts?.length === 0 && !isLoading && (\n            <motion.div\n              className=\"text-center py-20\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n            >\n              <h3 className=\"text-2xl font-semibold text-foreground mb-4\">No posts found</h3>\n              <p className=\"text-muted-foreground mb-8\">Try adjusting your search criteria or browse all posts</p>\n              <Button onClick={() => { setSearchTerm(''); setSelectedChain(null); }}>\n                Clear Filters\n              </Button>\n            </motion.div>\n          )}\n\n          {/* Load More Button */}\n          {filteredPosts && filteredPosts.length > 0 && (\n            <motion.div\n              className=\"text-center mt-16\"\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              viewport={{ once: true }}\n              transition={{ duration: 0.6 }}\n            >\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-12 py-4 font-medium transition-all duration-300\"\n                data-testid=\"button-load-more\"\n              >\n                Load More Posts\n              </Button>\n            </motion.div>\n          )}\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":12527},"client/src/pages/docs.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Navigation } from '@/components/navigation';\nimport { Footer } from '@/components/footer';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { \n  BookOpen, \n  Code, \n  Rocket, \n  Shield, \n  Users, \n  Zap,\n  ArrowRight,\n  ExternalLink,\n  Download,\n  Github,\n  FileText,\n  Terminal,\n  Layers,\n  Globe\n} from 'lucide-react';\n\nexport default function Docs() {\n  const quickStartSteps = [\n    {\n      step: '01',\n      title: 'Connect Your Wallet',\n      description: 'Link your Ethereum-compatible wallet to start publishing on-chain',\n      icon: Shield\n    },\n    {\n      step: '02',\n      title: 'Choose Your Network',\n      description: 'Select from Ethereum, Base, BNB Chain, or Avalanche based on your needs',\n      icon: Globe\n    },\n    {\n      step: '03',\n      title: 'Create Your First Post',\n      description: 'Write and publish your content directly to the blockchain',\n      icon: FileText\n    },\n    {\n      step: '04',\n      title: 'Share & Engage',\n      description: 'Share your decentralized content with the world',\n      icon: Users\n    }\n  ];\n\n  const docSections = [\n    {\n      category: 'Getting Started',\n      icon: Rocket,\n      color: 'from-green-500 to-emerald-600',\n      docs: [\n        { title: 'Quick Start Guide', description: 'Get up and running in 5 minutes', difficulty: 'Beginner' },\n        { title: 'Wallet Setup', description: 'Connect and configure your Web3 wallet', difficulty: 'Beginner' },\n        { title: 'Network Selection', description: 'Choosing the right blockchain network', difficulty: 'Beginner' },\n        { title: 'Publishing Your First Post', description: 'Step-by-step publishing guide', difficulty: 'Beginner' }\n      ]\n    },\n    {\n      category: 'Developer Resources',\n      icon: Code,\n      color: 'from-blue-500 to-indigo-600',\n      docs: [\n        { title: 'API Reference', description: 'Complete API documentation and endpoints', difficulty: 'Advanced' },\n        { title: 'Smart Contract Integration', description: 'Integrate with ChainBlog contracts', difficulty: 'Advanced' },\n        { title: 'SDK Documentation', description: 'JavaScript/TypeScript SDK guide', difficulty: 'Intermediate' },\n        { title: 'Custom Themes', description: 'Build and deploy custom blog themes', difficulty: 'Intermediate' }\n      ]\n    },\n    {\n      category: 'Platform Features',\n      icon: Layers,\n      color: 'from-purple-500 to-pink-600',\n      docs: [\n        { title: 'Content Management', description: 'Organize and manage your posts', difficulty: 'Beginner' },\n        { title: 'Multi-Chain Publishing', description: 'Publish across different networks', difficulty: 'Intermediate' },\n        { title: 'Content Monetization', description: 'Monetize your decentralized content', difficulty: 'Intermediate' },\n        { title: 'Community Features', description: 'Engage with other creators', difficulty: 'Beginner' }\n      ]\n    },\n    {\n      category: 'Advanced Topics',\n      icon: Terminal,\n      color: 'from-orange-500 to-red-600',\n      docs: [\n        { title: 'Gas Optimization', description: 'Reduce transaction costs', difficulty: 'Advanced' },\n        { title: 'IPFS Integration', description: 'Decentralized storage solutions', difficulty: 'Advanced' },\n        { title: 'Custom Smart Contracts', description: 'Deploy your own publishing contracts', difficulty: 'Expert' },\n        { title: 'Cross-Chain Bridging', description: 'Move content between networks', difficulty: 'Expert' }\n      ]\n    }\n  ];\n\n  const resources = [\n    {\n      title: 'GitHub Repository',\n      description: 'Explore the open-source codebase',\n      icon: Github,\n      link: '#',\n      external: true\n    },\n    {\n      title: 'API Playground',\n      description: 'Test API endpoints interactively',\n      icon: Terminal,\n      link: '#',\n      external: true\n    },\n    {\n      title: 'Community Discord',\n      description: 'Join our developer community',\n      icon: Users,\n      link: '#',\n      external: true\n    },\n    {\n      title: 'Download SDK',\n      description: 'Get the latest SDK package',\n      icon: Download,\n      link: '#',\n      external: false\n    }\n  ];\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'Beginner': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\n      case 'Intermediate': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\n      case 'Advanced': return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200';\n      case 'Expert': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"relative pt-32 pb-20 px-4 sm:px-6 lg:px-8 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500/10 via-primary/5 to-transparent pointer-events-none\" />\n        \n        <motion.div\n          className=\"absolute w-72 h-72 bg-gradient-to-br from-blue-500/20 to-primary/20 rounded-full blur-3xl\"\n          style={{ top: '15%', right: '15%' }}\n          animate={{\n            scale: [1, 1.4, 1],\n            rotate: [0, 90, 0],\n          }}\n          transition={{\n            duration: 18,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n\n        <div className=\"max-w-7xl mx-auto relative z-10\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-6xl md:text-8xl font-bold text-foreground mb-8 leading-tight\">\n              Documentation\n              <br />\n              <span className=\"bg-gradient-to-r from-blue-600 to-primary bg-clip-text text-transparent\">\n                & Guides\n              </span>\n            </h1>\n            <p className=\"text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Everything you need to build, publish, and thrive on the decentralized web\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mt-10\">\n              <Button\n                size=\"lg\"\n                className=\"bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-primary-foreground shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 px-8 py-4 text-lg font-semibold\"\n                data-testid=\"button-start-learning\"\n              >\n                <BookOpen className=\"w-5 h-5 mr-2\" />\n                Start Learning\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-8 py-4 text-lg font-medium\"\n                data-testid=\"button-view-api-docs\"\n              >\n                <Code className=\"w-5 h-5 mr-2\" />\n                View API Docs\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Quick Start Guide */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Quick Start</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Get started with ChainBlog in just a few simple steps\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {quickStartSteps.map((step, index) => (\n              <motion.div\n                key={step.step}\n                className=\"relative\"\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"p-8 h-full bg-card/80 backdrop-blur-sm border-border/50 hover:shadow-lg transition-all duration-300 hover:-translate-y-1\">\n                  <CardContent className=\"p-0 text-center\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary/20 to-blue-600/20 rounded-2xl flex items-center justify-center mx-auto mb-6\">\n                      <step.icon className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <div className=\"text-4xl font-bold text-primary mb-4\">{step.step}</div>\n                    <h3 className=\"text-xl font-bold text-foreground mb-4\">{step.title}</h3>\n                    <p className=\"text-muted-foreground\">{step.description}</p>\n                  </CardContent>\n                </Card>\n                {index < quickStartSteps.length - 1 && (\n                  <div className=\"hidden lg:block absolute top-1/2 -right-4 transform -translate-y-1/2\">\n                    <ArrowRight className=\"w-8 h-8 text-muted-foreground\" />\n                  </div>\n                )}\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Documentation Sections */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Documentation</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Comprehensive guides and references for all skill levels\n            </p>\n          </motion.div>\n\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            {docSections.map((section, sectionIndex) => (\n              <motion.div\n                key={section.category}\n                className=\"space-y-6\"\n                initial={{ opacity: 0, x: sectionIndex % 2 === 0 ? -30 : 30 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.8, delay: sectionIndex * 0.1 }}\n              >\n                <div className=\"flex items-center space-x-4 mb-8\">\n                  <div className={`w-12 h-12 bg-gradient-to-r ${section.color} rounded-xl flex items-center justify-center`}>\n                    <section.icon className=\"w-6 h-6 text-white\" />\n                  </div>\n                  <h3 className=\"text-3xl font-bold text-foreground\">{section.category}</h3>\n                </div>\n\n                <div className=\"space-y-4\">\n                  {section.docs.map((doc, docIndex) => (\n                    <motion.div\n                      key={doc.title}\n                      className=\"group p-6 bg-card/50 border border-border/50 rounded-xl hover:shadow-lg transition-all duration-300 hover:-translate-y-1 cursor-pointer\"\n                      whileHover={{ scale: 1.02 }}\n                      initial={{ opacity: 0, y: 20 }}\n                      whileInView={{ opacity: 1, y: 0 }}\n                      viewport={{ once: true }}\n                      transition={{ duration: 0.5, delay: (sectionIndex * 0.1) + (docIndex * 0.05) }}\n                    >\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <h4 className=\"text-lg font-semibold text-foreground mb-2 group-hover:text-primary transition-colors\">\n                            {doc.title}\n                          </h4>\n                          <p className=\"text-muted-foreground mb-3\">{doc.description}</p>\n                          <Badge className={getDifficultyColor(doc.difficulty)}>\n                            {doc.difficulty}\n                          </Badge>\n                        </div>\n                        <ExternalLink className=\"w-5 h-5 text-muted-foreground group-hover:text-primary transition-colors\" />\n                      </div>\n                    </motion.div>\n                  ))}\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Resources Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Developer Resources</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Tools and resources to accelerate your development\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {resources.map((resource, index) => (\n              <motion.div\n                key={resource.title}\n                className=\"group\"\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n              >\n                <Card className=\"p-8 h-full bg-card/80 backdrop-blur-sm border-border/50 hover:shadow-lg transition-all duration-300 hover:-translate-y-2 cursor-pointer\">\n                  <CardContent className=\"p-0 text-center\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary/20 to-blue-600/20 rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300\">\n                      <resource.icon className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h3 className=\"text-xl font-bold text-foreground mb-4 group-hover:text-primary transition-colors\">\n                      {resource.title}\n                    </h3>\n                    <p className=\"text-muted-foreground mb-6\">{resource.description}</p>\n                    <div className=\"flex items-center justify-center text-primary font-medium\">\n                      <span className=\"mr-2\">Access</span>\n                      {resource.external ? (\n                        <ExternalLink className=\"w-4 h-4\" />\n                      ) : (\n                        <ArrowRight className=\"w-4 h-4\" />\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">\n              Ready to Build?\n            </h2>\n            <p className=\"text-xl text-muted-foreground mb-10\">\n              Join our community of developers building the future of decentralized publishing\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                className=\"bg-gradient-to-r from-primary to-blue-600 hover:from-primary/90 hover:to-blue-600/90 text-primary-foreground shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 px-12 py-4 text-lg font-semibold\"\n              >\n                <Rocket className=\"w-5 h-5 mr-2\" />\n                Get Started\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-12 py-4 text-lg font-medium\"\n              >\n                <Github className=\"w-5 h-5 mr-2\" />\n                View on GitHub\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":16900},"client/src/pages/features.tsx":{"content":"import { motion } from 'framer-motion';\nimport { Navigation } from '@/components/navigation';\nimport { Footer } from '@/components/footer';\nimport { Lock, Link, Shield, Zap, Users, Globe, Code, Layers, ArrowRight } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { supportedChains } from '@/lib/wagmi';\n\nexport default function Features() {\n  const mainFeatures = [\n    {\n      icon: Lock,\n      title: 'True Ownership',\n      description: 'Your content lives on the blockchain forever. No platform can delete, modify, or restrict your posts.',\n      benefits: ['Permanent storage', 'Censorship resistant', 'Platform independent']\n    },\n    {\n      icon: Link,\n      title: 'Multi-Chain Support',\n      description: 'Publish on Ethereum, Base, BNB Chain, and Avalanche. Choose the network that fits your needs.',\n      benefits: ['Cross-chain compatibility', 'Network flexibility', 'Cost optimization']\n    },\n    {\n      icon: Shield,\n      title: 'Censorship Resistant',\n      description: 'Decentralized storage means your voice can never be silenced. Write freely without fear.',\n      benefits: ['Decentralized hosting', 'No single point of failure', 'Global accessibility']\n    },\n    {\n      icon: Zap,\n      title: 'Lightning Fast',\n      description: 'Built with modern Web3 infrastructure for optimal performance and user experience.',\n      benefits: ['Instant publishing', 'Fast loading', 'Smooth interactions']\n    },\n    {\n      icon: Users,\n      title: 'Community Driven',\n      description: 'Connect with other creators and build meaningful relationships in the Web3 space.',\n      benefits: ['Creator network', 'Collaboration tools', 'Community governance']\n    },\n    {\n      icon: Globe,\n      title: 'Global Reach',\n      description: 'Publish to a global audience without geographical restrictions or platform limitations.',\n      benefits: ['Worldwide access', 'No geo-blocking', 'Universal compatibility']\n    }\n  ];\n\n  const technicalFeatures = [\n    {\n      icon: Code,\n      title: 'Developer Friendly',\n      description: 'Open source with comprehensive APIs and tools for developers.',\n      details: 'Built on modern Web3 stack with TypeScript, React, and blockchain integration.'\n    },\n    {\n      icon: Layers,\n      title: 'Modular Architecture',\n      description: 'Extensible platform that grows with your needs.',\n      details: 'Plugin system allows for custom functionality and third-party integrations.'\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      \n      {/* Hero Section */}\n      <section className=\"relative pt-32 pb-20 px-4 sm:px-6 lg:px-8 overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-br from-primary/10 via-purple-500/5 to-transparent pointer-events-none\" />\n        \n        <motion.div\n          className=\"absolute w-96 h-96 bg-gradient-to-br from-primary/20 to-purple-500/20 rounded-full blur-3xl\"\n          style={{ top: '10%', right: '5%' }}\n          animate={{\n            scale: [1, 1.2, 1],\n            rotate: [0, 180, 360],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: 'easeInOut',\n          }}\n        />\n\n        <div className=\"max-w-7xl mx-auto relative z-10\">\n          <motion.div\n            className=\"text-center mb-20\"\n            initial={{ opacity: 0, y: 30 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8 }}\n          >\n            <h1 className=\"text-6xl md:text-8xl font-bold text-foreground mb-8 leading-tight\">\n              Powerful\n              <br />\n              <span className=\"bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\">\n                Features\n              </span>\n            </h1>\n            <p className=\"text-2xl text-muted-foreground max-w-3xl mx-auto leading-relaxed\">\n              Discover the cutting-edge capabilities that make ChainBlog the future of decentralized content creation\n            </p>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* Main Features Grid */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Core Features</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Everything you need to create, publish, and manage your decentralized content\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {mainFeatures.map((feature, index) => (\n              <motion.div\n                key={feature.title}\n                className=\"group bg-card/50 backdrop-blur-sm p-8 rounded-3xl border border-border/50 hover:shadow-2xl hover:shadow-primary/10 transition-all duration-500 hover:-translate-y-2\"\n                initial={{ opacity: 0, y: 30 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                whileHover={{ scale: 1.02 }}\n                data-testid={`feature-${feature.title.toLowerCase().replace(' ', '-')}`}\n              >\n                <div className=\"w-20 h-20 bg-gradient-to-br from-primary/20 to-purple-600/20 rounded-2xl flex items-center justify-center mx-auto mb-8 group-hover:scale-110 group-hover:rotate-6 transition-all duration-300\">\n                  <feature.icon className=\"w-10 h-10 text-primary\" />\n                </div>\n                <h3 className=\"text-2xl font-bold text-foreground mb-4 group-hover:text-primary transition-colors\">\n                  {feature.title}\n                </h3>\n                <p className=\"text-muted-foreground mb-6 leading-relaxed\">\n                  {feature.description}\n                </p>\n                <div className=\"space-y-2\">\n                  {feature.benefits.map((benefit, i) => (\n                    <div key={i} className=\"flex items-center text-sm text-muted-foreground\">\n                      <ArrowRight className=\"w-4 h-4 text-primary mr-2\" />\n                      {benefit}\n                    </div>\n                  ))}\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Technical Features */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-muted/30\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"text-center mb-16\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">Technical Excellence</h2>\n            <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n              Built on cutting-edge technology for developers and creators alike\n            </p>\n          </motion.div>\n\n          <div className=\"grid md:grid-cols-2 gap-12\">\n            {technicalFeatures.map((feature, index) => (\n              <motion.div\n                key={feature.title}\n                className=\"group\"\n                initial={{ opacity: 0, x: index % 2 === 0 ? -30 : 30 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                viewport={{ once: true }}\n                transition={{ duration: 0.8, delay: index * 0.2 }}\n              >\n                <Card className=\"p-10 h-full border-2 border-border/50 hover:border-primary/50 transition-all duration-300 bg-card/80 backdrop-blur-sm\">\n                  <CardContent className=\"p-0\">\n                    <div className=\"w-16 h-16 bg-gradient-to-br from-primary/20 to-purple-600/20 rounded-xl flex items-center justify-center mb-6 group-hover:scale-110 transition-transform duration-300\">\n                      <feature.icon className=\"w-8 h-8 text-primary\" />\n                    </div>\n                    <h3 className=\"text-3xl font-bold text-foreground mb-4\">\n                      {feature.title}\n                    </h3>\n                    <p className=\"text-lg text-muted-foreground mb-6\">\n                      {feature.description}\n                    </p>\n                    <p className=\"text-sm text-muted-foreground/80 italic\">\n                      {feature.details}\n                    </p>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Supported Networks */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <motion.div\n            className=\"bg-gradient-to-r from-primary/10 to-purple-600/10 rounded-3xl p-12 text-center border border-primary/20\"\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n            data-testid=\"supported-networks\"\n          >\n            <h3 className=\"text-4xl font-bold text-foreground mb-8\">Supported Networks</h3>\n            <p className=\"text-lg text-muted-foreground mb-12 max-w-2xl mx-auto\">\n              Choose the blockchain network that best fits your needs and audience\n            </p>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n              {supportedChains.map((chain, index) => (\n                <motion.div\n                  key={chain.id}\n                  className=\"flex flex-col items-center space-y-4 p-6 rounded-2xl bg-card/50 border border-border/50 hover:shadow-lg transition-all duration-300\"\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  whileInView={{ opacity: 1, scale: 1 }}\n                  viewport={{ once: true }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  whileHover={{ scale: 1.05 }}\n                >\n                  <div className={`w-12 h-12 ${chain.color} rounded-full`} />\n                  <span className=\"font-semibold text-foreground\">{chain.name}</span>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-5xl font-bold text-foreground mb-6\">\n              Ready to Get Started?\n            </h2>\n            <p className=\"text-xl text-muted-foreground mb-10\">\n              Join thousands of creators who have already embraced the future of decentralized blogging\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button\n                size=\"lg\"\n                className=\"bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90 text-primary-foreground shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 px-12 py-4 text-lg font-semibold\"\n                data-testid=\"button-start-blogging-cta\"\n              >\n                Start Blogging Now\n              </Button>\n              <Button\n                variant=\"outline\"\n                size=\"lg\"\n                className=\"border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground px-12 py-4 text-lg font-medium\"\n                data-testid=\"button-view-docs-cta\"\n              >\n                View Documentation\n              </Button>\n            </div>\n          </motion.div>\n        </div>\n      </section>\n\n      <Footer />\n    </div>\n  );\n}","size_bytes":12212},"client/src/components/advanced-discovery.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { useQuery } from '@tanstack/react-query';\nimport { BlogPost, Category, Tag } from '@shared/schema';\nimport { \n  Search, \n  TrendingUp, \n  Clock, \n  Star, \n  Flame, \n  Filter,\n  ArrowRight,\n  Users,\n  Eye,\n  Heart,\n  MessageCircle,\n  Sparkles,\n  Crown,\n  Zap\n} from 'lucide-react';\n\nexport function AdvancedDiscovery() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\n  const [selectedTag, setSelectedTag] = useState<string | null>(null);\n\n  // Fetch real data from API\n  const { data: categories = [], isLoading: categoriesLoading } = useQuery<Category[]>({\n    queryKey: ['/api/categories'],\n  });\n\n  const { data: trendingTags = [], isLoading: tagsLoading } = useQuery<Tag[]>({\n    queryKey: ['/api/tags/trending'],\n  });\n\n  const { data: trendingPosts = [], isLoading: trendingLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts/trending'],\n  });\n\n  const { data: featuredPosts = [], isLoading: featuredLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts/featured'],\n  });\n\n  const { data: aiRecommendations = [], isLoading: aiLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/recommendations'],\n  });\n\n  const { data: searchResults = [], isLoading: searchLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts/search', searchTerm],\n    enabled: searchTerm.length > 2,\n    queryFn: async () => {\n      const response = await fetch(`/api/blog-posts/search?q=${encodeURIComponent(searchTerm)}`);\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n      return response.json();\n    },\n  });\n\n  // Legacy categories for display if API data isn't available\n  const fallbackCategories = [\n    { \n      id: 'defi', \n      name: 'DeFi', \n      count: 234,\n      color: 'from-blue-500 to-cyan-500',\n      icon: '💎',\n      description: 'Decentralized Finance protocols and innovations'\n    },\n    { \n      id: 'nft', \n      name: 'NFTs', \n      count: 189,\n      color: 'from-purple-500 to-pink-500',\n      icon: '🎨',\n      description: 'Non-Fungible Tokens and digital art'\n    },\n    { \n      id: 'web3', \n      name: 'Web3', \n      count: 156,\n      color: 'from-green-500 to-emerald-500',\n      icon: '🌐',\n      description: 'Decentralized web technologies'\n    },\n    { \n      id: 'gaming', \n      name: 'Gaming', \n      count: 142,\n      color: 'from-orange-500 to-red-500',\n      icon: '🎮',\n      description: 'Blockchain gaming and GameFi'\n    },\n    { \n      id: 'dao', \n      name: 'DAOs', \n      count: 98,\n      color: 'from-indigo-500 to-purple-500',\n      icon: '🏛️',\n      description: 'Decentralized Autonomous Organizations'\n    },\n    { \n      id: 'metaverse', \n      name: 'Metaverse', \n      count: 87,\n      color: 'from-pink-500 to-rose-500',\n      icon: '🌌',\n      description: 'Virtual worlds and digital experiences'\n    }\n  ];\n\n  // Use real categories or fallback\n  const displayCategories = categories.length > 0 ? categories : fallbackCategories;\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6\">\n      {/* Enhanced Search Header */}\n      <motion.div\n        className=\"mb-12\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl md:text-5xl font-bold text-foreground mb-4\">\n            Discover\n            <span className=\"bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\"> Amazing</span>\n            <br />\n            Content\n          </h1>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">\n            Powered by AI recommendations and advanced content discovery algorithms\n          </p>\n        </div>\n\n        {/* Advanced Search Bar */}\n        <div className=\"relative max-w-2xl mx-auto\">\n          <Search className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search posts, authors, topics...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            className=\"pl-12 pr-16 py-4 text-lg rounded-2xl border-2 bg-background/50 backdrop-blur-sm\"\n            data-testid=\"search-advanced\"\n          />\n          <Button\n            size=\"sm\"\n            className=\"absolute right-2 top-1/2 transform -translate-y-1/2 rounded-xl\"\n            data-testid=\"button-advanced-search\"\n          >\n            <Filter className=\"w-4 h-4 mr-2\" />\n            Filter\n          </Button>\n        </div>\n      </motion.div>\n\n      <Tabs defaultValue=\"trending\" className=\"space-y-8\">\n        <TabsList className=\"grid w-full grid-cols-4 lg:w-auto lg:grid-cols-4 bg-muted/30 p-1 rounded-2xl\">\n          <TabsTrigger value=\"trending\" className=\"rounded-xl\" data-testid=\"tab-trending\">\n            <TrendingUp className=\"w-4 h-4 mr-2\" />\n            Trending\n          </TabsTrigger>\n          <TabsTrigger value=\"categories\" className=\"rounded-xl\" data-testid=\"tab-categories\">\n            <Filter className=\"w-4 h-4 mr-2\" />\n            Categories\n          </TabsTrigger>\n          <TabsTrigger value=\"featured\" className=\"rounded-xl\" data-testid=\"tab-featured\">\n            <Star className=\"w-4 h-4 mr-2\" />\n            Featured\n          </TabsTrigger>\n          <TabsTrigger value=\"ai-picks\" className=\"rounded-xl\" data-testid=\"tab-ai-picks\">\n            <Sparkles className=\"w-4 h-4 mr-2\" />\n            AI Picks\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Trending Content */}\n        <TabsContent value=\"trending\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold flex items-center\">\n                <Flame className=\"w-6 h-6 mr-2 text-orange-500\" />\n                Trending Now\n              </h2>\n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"w-4 h-4 text-muted-foreground\" />\n                <span className=\"text-sm text-muted-foreground\">Last 24 hours</span>\n              </div>\n            </div>\n\n            {/* Trending Tags */}\n            <div className=\"mb-8\">\n              <h3 className=\"text-lg font-semibold mb-4\">Hot Topics</h3>\n              <div className=\"flex flex-wrap gap-3\">\n                {trendingTags.map((tag, index) => (\n                  <motion.div\n                    key={tag.name}\n                    initial={{ opacity: 0, scale: 0.8 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.3, delay: index * 0.1 }}\n                  >\n                    <Badge\n                      variant={selectedTag === tag.name ? \"default\" : \"outline\"}\n                      className={`px-4 py-2 text-sm cursor-pointer transition-all duration-200 hover:scale-105 ${\n                        tag.trending ? 'border-orange-500 bg-orange-50 text-orange-700 dark:bg-orange-950 dark:text-orange-300' : ''\n                      }`}\n                      onClick={() => setSelectedTag(tag.name === selectedTag ? null : tag.name)}\n                      data-testid={`tag-${tag.name}`}\n                    >\n                      {tag.trending && <TrendingUp className=\"w-3 h-3 mr-1\" />}\n                      #{tag.name}\n                      <span className=\"ml-2 text-xs opacity-70\">{tag.count}</span>\n                    </Badge>\n                  </motion.div>\n                ))}\n              </div>\n            </div>\n\n            {/* Trending Posts Grid */}\n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {trendingLoading ? (\n                // Loading skeleton\n                [...Array(6)].map((_, i) => (\n                  <motion.div\n                    key={i}\n                    className=\"group\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: i * 0.1 }}\n                  >\n                    <Card className=\"overflow-hidden border-0 bg-gradient-to-br from-card/80 to-card/40 backdrop-blur-sm\">\n                      <div className=\"h-48 bg-gradient-to-br from-primary/20 to-purple-600/20 animate-pulse\" />\n                      <CardContent className=\"p-6\">\n                        <div className=\"h-4 bg-muted rounded mb-2 animate-pulse\" />\n                        <div className=\"h-3 bg-muted rounded mb-4 animate-pulse\" />\n                        <div className=\"flex justify-between\">\n                          <div className=\"h-3 bg-muted rounded w-16 animate-pulse\" />\n                          <div className=\"h-3 bg-muted rounded w-20 animate-pulse\" />\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))\n              ) : (\n                trendingPosts.map((post, i) => (\n                  <motion.div\n                    key={post.id}\n                    className=\"group\"\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5, delay: i * 0.1 }}\n                  >\n                    <Card className=\"overflow-hidden border-0 bg-gradient-to-br from-card/80 to-card/40 backdrop-blur-sm hover:shadow-xl transition-all duration-300 group-hover:-translate-y-2\">\n                      <div className=\"relative h-48 bg-gradient-to-br from-primary/20 to-purple-600/20\">\n                        <div className=\"absolute top-4 left-4\">\n                          <Badge className=\"bg-orange-500 text-white\">\n                            <TrendingUp className=\"w-3 h-3 mr-1\" />\n                            #{i + 1}\n                          </Badge>\n                        </div>\n                        <div className=\"absolute top-4 right-4\">\n                          <div className=\"flex items-center space-x-2 text-white\">\n                            <Eye className=\"w-4 h-4\" />\n                            <span className=\"text-sm font-medium\">{((post.views || 0) / 1000).toFixed(1)}K</span>\n                          </div>\n                        </div>\n                      </div>\n                      <CardContent className=\"p-6\">\n                        <h3 className=\"text-lg font-bold text-foreground mb-2 group-hover:text-primary transition-colors line-clamp-2\">\n                          {post.title}\n                        </h3>\n                        <p className=\"text-muted-foreground text-sm mb-4 line-clamp-2\">\n                          {post.excerpt}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Heart className=\"w-4 h-4\" />\n                              <span>{post.likes || 0}</span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              <MessageCircle className=\"w-4 h-4\" />\n                              <span>{post.comments || 0}</span>\n                            </div>\n                          </div>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {post.readingTime || 5} min read\n                          </Badge>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))\n              )}\n            </div>\n          </motion.div>\n        </TabsContent>\n\n        {/* Categories */}\n        <TabsContent value=\"categories\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-2xl font-bold mb-6\">Explore by Category</h2>\n            \n            <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {displayCategories.map((category, index) => (\n                <motion.div\n                  key={category.id}\n                  className=\"group cursor-pointer\"\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  onClick={() => setSelectedCategory(category.id)}\n                  data-testid={`category-${category.id}`}\n                >\n                  <Card className=\"overflow-hidden border-0 bg-gradient-to-br from-card/80 to-card/40 backdrop-blur-sm hover:shadow-xl transition-all duration-300 group-hover:-translate-y-2\">\n                    <CardContent className=\"p-8 text-center\">\n                      <div className={`w-16 h-16 bg-gradient-to-br ${category.color} rounded-2xl flex items-center justify-center mx-auto mb-6 group-hover:scale-110 transition-transform duration-300`}>\n                        <span className=\"text-3xl\">{category.icon}</span>\n                      </div>\n                      \n                      <h3 className=\"text-xl font-bold text-foreground mb-2 group-hover:text-primary transition-colors\">\n                        {category.name}\n                      </h3>\n                      <p className=\"text-muted-foreground text-sm mb-4 line-clamp-2\">\n                        {category.description}\n                      </p>\n                      \n                      <div className=\"flex items-center justify-between\">\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {category.count} posts\n                        </Badge>\n                        <ArrowRight className=\"w-4 h-4 text-muted-foreground group-hover:text-primary group-hover:translate-x-1 transition-all duration-200\" />\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </TabsContent>\n\n        {/* Featured */}\n        <TabsContent value=\"featured\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold flex items-center\">\n                <Crown className=\"w-6 h-6 mr-2 text-yellow-500\" />\n                Featured Content\n              </h2>\n              <Badge className=\"bg-gradient-to-r from-yellow-500 to-orange-500 text-white\">\n                Editor's Choice\n              </Badge>\n            </div>\n\n            <div className=\"space-y-6\">\n              {featuredPosts.map((post, index) => (\n                <motion.div\n                  key={post.id}\n                  className=\"group\"\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.6, delay: index * 0.2 }}\n                >\n                  <Card className=\"overflow-hidden border-0 bg-gradient-to-r from-card/80 to-card/40 backdrop-blur-sm hover:shadow-2xl transition-all duration-300\">\n                    <div className=\"md:flex\">\n                      <div className=\"md:w-1/3 h-64 md:h-auto bg-gradient-to-br from-primary/20 to-purple-600/20 relative\">\n                        <div className=\"absolute top-4 left-4\">\n                          <Badge className=\"bg-yellow-500 text-white\">\n                            <Star className=\"w-3 h-3 mr-1\" />\n                            Featured\n                          </Badge>\n                        </div>\n                      </div>\n                      \n                      <CardContent className=\"md:w-2/3 p-8\">\n                        <div className=\"flex items-center space-x-2 mb-4\">\n                          <Badge className={`bg-gradient-to-r ${categories.find(c => c.name === post.category)?.color} text-white`}>\n                            {post.category}\n                          </Badge>\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            {post.readingTime} min read\n                          </Badge>\n                          <div className=\"flex items-center text-xs text-muted-foreground\">\n                            <TrendingUp className=\"w-3 h-3 mr-1\" />\n                            {post.trendingScore}% trending\n                          </div>\n                        </div>\n                        \n                        <h3 className=\"text-2xl font-bold text-foreground mb-3 group-hover:text-primary transition-colors\">\n                          {post.title}\n                        </h3>\n                        <p className=\"text-muted-foreground mb-4 line-clamp-2\">\n                          {post.excerpt}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className=\"w-8 h-8 bg-gradient-to-br from-primary to-purple-600 rounded-full flex items-center justify-center\">\n                              <Users className=\"w-4 h-4 text-white\" />\n                            </div>\n                            <div>\n                              <p className=\"text-sm font-medium flex items-center\">\n                                {post.authorName}\n                                {post.authorVerified && <Crown className=\"w-3 h-3 ml-1 text-yellow-500\" />}\n                              </p>\n                              <p className=\"text-xs text-muted-foreground\">\n                                {new Date(post.publishedAt).toLocaleDateString()}\n                              </p>\n                            </div>\n                          </div>\n                          \n                          <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Eye className=\"w-4 h-4\" />\n                              <span>{(post.views / 1000).toFixed(1)}K</span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              <Heart className=\"w-4 h-4\" />\n                              <span>{post.likes}</span>\n                            </div>\n                            <div className=\"flex items-center space-x-1\">\n                              <MessageCircle className=\"w-4 h-4\" />\n                              <span>{post.comments}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </CardContent>\n                    </div>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </TabsContent>\n\n        {/* AI Picks */}\n        <TabsContent value=\"ai-picks\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-2xl font-bold flex items-center\">\n                <Zap className=\"w-6 h-6 mr-2 text-purple-500\" />\n                AI Recommendations\n              </h2>\n              <Badge className=\"bg-gradient-to-r from-purple-500 to-blue-500 text-white\">\n                Powered by AI\n              </Badge>\n            </div>\n\n            <div className=\"grid md:grid-cols-1 lg:grid-cols-2 gap-6\">\n              {aiRecommendations.map((rec, index) => (\n                <motion.div\n                  key={rec.id}\n                  className=\"group\"\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  <Card className=\"border-0 bg-gradient-to-br from-purple-50 to-blue-50 dark:from-purple-950/20 dark:to-blue-950/20 hover:shadow-xl transition-all duration-300 group-hover:-translate-y-1\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className=\"w-8 h-8 bg-gradient-to-br from-purple-500 to-blue-500 rounded-full flex items-center justify-center\">\n                            <Sparkles className=\"w-4 h-4 text-white\" />\n                          </div>\n                          <Badge variant=\"outline\" className=\"text-xs bg-white/50\">\n                            {rec.relevanceScore}% match\n                          </Badge>\n                        </div>\n                        <Badge variant=\"outline\" className=\"text-xs\">\n                          {rec.readingTime} min read\n                        </Badge>\n                      </div>\n                      \n                      <h3 className=\"text-lg font-bold text-foreground mb-2 group-hover:text-purple-600 transition-colors\">\n                        {rec.title}\n                      </h3>\n                      <p className=\"text-sm text-muted-foreground mb-3\">\n                        by {rec.author}\n                      </p>\n                      <p className=\"text-xs text-purple-600 bg-purple-50 dark:bg-purple-950/30 px-3 py-2 rounded-lg\">\n                        💡 {rec.reason}\n                      </p>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","size_bytes":22688},"client/src/components/creator-dashboard.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { BlogPost } from '@shared/schema';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Progress } from '@/components/ui/progress';\nimport { \n  BarChart, \n  TrendingUp, \n  Users, \n  Eye, \n  Heart, \n  MessageCircle,\n  DollarSign,\n  Award,\n  Calendar,\n  Target,\n  Zap,\n  Crown,\n  Star,\n  Rocket,\n  PenTool,\n  Settings,\n  Share2,\n  Download\n} from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area, BarChart as RechartsBar, Bar } from 'recharts';\n\nexport function CreatorDashboard() {\n  const [selectedPeriod, setSelectedPeriod] = useState<'7d' | '30d' | '90d' | '1y'>('30d');\n\n  // Fetch real user posts data\n  const { data: userPosts = [], isLoading: postsLoading } = useQuery<BlogPost[]>({\n    queryKey: ['/api/blog-posts'], // In real app, this would be filtered by current user\n  });\n\n  const { data: realAnalyticsData = [], isLoading: analyticsLoading } = useQuery({\n    queryKey: ['/api/analytics/creator', selectedPeriod],\n  });\n\n  // Fallback analytics data for display\n  const fallbackAnalyticsData = [\n    { date: '2024-01-01', views: 1200, likes: 89, comments: 34, earnings: 45 },\n    { date: '2024-01-02', views: 1567, likes: 134, comments: 67, earnings: 78 },\n    { date: '2024-01-03', views: 2100, likes: 156, comments: 89, earnings: 102 },\n    { date: '2024-01-04', views: 1890, likes: 142, comments: 76, earnings: 89 },\n    { date: '2024-01-05', views: 2450, likes: 198, comments: 123, earnings: 134 },\n    { date: '2024-01-06', views: 3200, likes: 287, comments: 156, earnings: 203 },\n    { date: '2024-01-07', views: 2800, likes: 234, comments: 134, earnings: 167 },\n  ];\n\n  // Use real analytics or fallback\n  const displayAnalyticsData = realAnalyticsData.length > 0 ? realAnalyticsData : fallbackAnalyticsData;\n\n  // Use real posts data or fallback\n  const displayPosts = userPosts.slice(0, 5); // Top 5 posts\n\n  const fallbackTopPosts = [\n    {\n      id: '1',\n      title: 'The Future of Cross-Chain DeFi Protocols',\n      views: 15400,\n      likes: 892,\n      comments: 127,\n      shares: 234,\n      earnings: 245,\n      publishedAt: '2024-01-15',\n      status: 'trending',\n      category: 'DeFi'\n    },\n    {\n      id: '2',\n      title: 'Building Sustainable GameFi Economies',\n      views: 12300,\n      likes: 634,\n      comments: 89,\n      shares: 156,\n      earnings: 189,\n      publishedAt: '2024-01-12',\n      status: 'popular',\n      category: 'Gaming'\n    },\n    {\n      id: '3',\n      title: 'Zero-Knowledge Proofs Explained Simply',\n      views: 9800,\n      likes: 445,\n      comments: 67,\n      shares: 123,\n      earnings: 134,\n      publishedAt: '2024-01-10',\n      status: 'featured',\n      category: 'Technology'\n    }\n  ];\n\n  const achievements = [\n    {\n      id: '1',\n      title: 'Rising Star',\n      description: 'Reached 10K total views',\n      icon: Star,\n      color: 'from-yellow-400 to-orange-500',\n      earned: true,\n      earnedAt: '2024-01-15'\n    },\n    {\n      id: '2',\n      title: 'Community Builder',\n      description: 'Received 1000+ comments',\n      icon: Users,\n      color: 'from-blue-400 to-cyan-500',\n      earned: true,\n      earnedAt: '2024-01-10'\n    },\n    {\n      id: '3',\n      title: 'Top Creator',\n      description: 'Featured post on homepage',\n      icon: Crown,\n      color: 'from-purple-400 to-pink-500',\n      earned: true,\n      earnedAt: '2024-01-08'\n    },\n    {\n      id: '4',\n      title: 'Viral Content',\n      description: 'Post reached 50K views',\n      icon: Rocket,\n      color: 'from-green-400 to-emerald-500',\n      earned: false,\n      progress: 31 // 31% towards goal\n    }\n  ];\n\n  // Calculate real stats from posts data\n  const creatorStats = userPosts.length > 0 ? {\n    totalViews: userPosts.reduce((sum, post) => sum + (post.views || 0), 0),\n    totalLikes: userPosts.reduce((sum, post) => sum + (post.likes || 0), 0),\n    totalComments: userPosts.reduce((sum, post) => sum + (post.comments || 0), 0),\n    totalFollowers: 2891, // This would come from user profile API\n    totalEarnings: 1456, // This would come from monetization API\n    postsPublished: userPosts.length,\n    averageReadTime: userPosts.reduce((sum, post) => sum + (post.readingTime || 0), 0) / userPosts.length,\n    engagementRate: userPosts.length > 0 ? (userPosts.reduce((sum, post) => sum + (post.likes || 0) + (post.comments || 0), 0) / userPosts.reduce((sum, post) => sum + (post.views || 0), 0)) * 100 : 0\n  } : {\n    // Fallback stats when no real data\n    totalViews: 125400,\n    totalLikes: 8943,\n    totalComments: 1234,\n    totalFollowers: 2891,\n    totalEarnings: 1456,\n    postsPublished: 47,\n    averageReadTime: 6.2,\n    engagementRate: 12.4\n  };\n\n  const recentActivity = [\n    { type: 'like', content: 'Someone liked your post \"DeFi Protocols\"', time: '2 min ago' },\n    { type: 'comment', content: 'New comment on \"GameFi Economics\"', time: '15 min ago' },\n    { type: 'follow', content: '5 new followers this hour', time: '1 hour ago' },\n    { type: 'earning', content: 'Earned 12 USDC from post views', time: '2 hours ago' },\n    { type: 'feature', content: 'Your post was featured on homepage', time: '1 day ago' }\n  ];\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'trending':\n        return <Badge className=\"bg-orange-500 text-white\"><TrendingUp className=\"w-3 h-3 mr-1\" />Trending</Badge>;\n      case 'popular':\n        return <Badge className=\"bg-blue-500 text-white\"><Zap className=\"w-3 h-3 mr-1\" />Popular</Badge>;\n      case 'featured':\n        return <Badge className=\"bg-purple-500 text-white\"><Star className=\"w-3 h-3 mr-1\" />Featured</Badge>;\n      default:\n        return <Badge variant=\"outline\">Published</Badge>;\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-8\">\n      {/* Header */}\n      <motion.div\n        className=\"text-center mb-8\"\n        initial={{ opacity: 0, y: -20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n      >\n        <h1 className=\"text-4xl font-bold text-foreground mb-4\">\n          Creator \n          <span className=\"bg-gradient-to-r from-primary to-purple-600 bg-clip-text text-transparent\"> Dashboard</span>\n        </h1>\n        <p className=\"text-xl text-muted-foreground\">\n          Advanced analytics and insights to grow your content\n        </p>\n      </motion.div>\n\n      {/* Quick Stats */}\n      <motion.div\n        className=\"grid grid-cols-2 md:grid-cols-4 gap-6\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.2 }}\n      >\n        <Card className=\"bg-gradient-to-br from-blue-50 to-cyan-50 dark:from-blue-950/20 dark:to-cyan-950/20 border-0\">\n          <CardContent className=\"p-6 text-center\">\n            <Eye className=\"w-8 h-8 text-blue-500 mx-auto mb-3\" />\n            <div className=\"text-2xl font-bold text-foreground\">{creatorStats.totalViews.toLocaleString()}</div>\n            <div className=\"text-sm text-muted-foreground\">Total Views</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-950/20 dark:to-emerald-950/20 border-0\">\n          <CardContent className=\"p-6 text-center\">\n            <Heart className=\"w-8 h-8 text-green-500 mx-auto mb-3\" />\n            <div className=\"text-2xl font-bold text-foreground\">{creatorStats.totalLikes.toLocaleString()}</div>\n            <div className=\"text-sm text-muted-foreground\">Total Likes</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-950/20 dark:to-pink-950/20 border-0\">\n          <CardContent className=\"p-6 text-center\">\n            <Users className=\"w-8 h-8 text-purple-500 mx-auto mb-3\" />\n            <div className=\"text-2xl font-bold text-foreground\">{creatorStats.totalFollowers.toLocaleString()}</div>\n            <div className=\"text-sm text-muted-foreground\">Followers</div>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-950/20 dark:to-orange-950/20 border-0\">\n          <CardContent className=\"p-6 text-center\">\n            <DollarSign className=\"w-8 h-8 text-yellow-500 mx-auto mb-3\" />\n            <div className=\"text-2xl font-bold text-foreground\">${creatorStats.totalEarnings}</div>\n            <div className=\"text-sm text-muted-foreground\">Total Earned</div>\n          </CardContent>\n        </Card>\n      </motion.div>\n\n      <Tabs defaultValue=\"analytics\" className=\"space-y-8\">\n        <TabsList className=\"grid w-full grid-cols-4 lg:w-auto lg:grid-cols-4 bg-muted/30 p-1 rounded-2xl\">\n          <TabsTrigger value=\"analytics\" className=\"rounded-xl\" data-testid=\"tab-analytics\">\n            <BarChart className=\"w-4 h-4 mr-2\" />\n            Analytics\n          </TabsTrigger>\n          <TabsTrigger value=\"content\" className=\"rounded-xl\" data-testid=\"tab-content\">\n            <PenTool className=\"w-4 h-4 mr-2\" />\n            Content\n          </TabsTrigger>\n          <TabsTrigger value=\"achievements\" className=\"rounded-xl\" data-testid=\"tab-achievements\">\n            <Award className=\"w-4 h-4 mr-2\" />\n            Achievements\n          </TabsTrigger>\n          <TabsTrigger value=\"monetization\" className=\"rounded-xl\" data-testid=\"tab-monetization\">\n            <DollarSign className=\"w-4 h-4 mr-2\" />\n            Monetization\n          </TabsTrigger>\n        </TabsList>\n\n        {/* Analytics Tab */}\n        <TabsContent value=\"analytics\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            {/* Period Selector */}\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-bold\">Performance Analytics</h2>\n              <div className=\"flex space-x-2\">\n                {(['7d', '30d', '90d', '1y'] as const).map((period) => (\n                  <Button\n                    key={period}\n                    variant={selectedPeriod === period ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    onClick={() => setSelectedPeriod(period)}\n                    data-testid={`period-${period}`}\n                  >\n                    {period === '7d' ? '7 Days' : \n                     period === '30d' ? '30 Days' : \n                     period === '90d' ? '90 Days' : '1 Year'}\n                  </Button>\n                ))}\n              </div>\n            </div>\n\n            {/* Charts */}\n            <div className=\"grid lg:grid-cols-2 gap-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Eye className=\"w-5 h-5 mr-2\" />\n                    Views Over Time\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <AreaChart data={displayAnalyticsData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Area type=\"monotone\" dataKey=\"views\" stroke=\"#8B5CF6\" fill=\"url(#gradient)\" />\n                      <defs>\n                        <linearGradient id=\"gradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                          <stop offset=\"5%\" stopColor=\"#8B5CF6\" stopOpacity={0.8}/>\n                          <stop offset=\"95%\" stopColor=\"#8B5CF6\" stopOpacity={0.1}/>\n                        </linearGradient>\n                      </defs>\n                    </AreaChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <DollarSign className=\"w-5 h-5 mr-2\" />\n                    Earnings Progress\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <RechartsBar data={displayAnalyticsData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Bar dataKey=\"earnings\" fill=\"#10B981\" />\n                    </RechartsBar>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Engagement Metrics */}\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                  <TrendingUp className=\"w-5 h-5 mr-2\" />\n                  Engagement Metrics\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"grid md:grid-cols-3 gap-6\">\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-green-500 mb-2\">{creatorStats.engagementRate}%</div>\n                    <div className=\"text-sm text-muted-foreground\">Engagement Rate</div>\n                    <Progress value={creatorStats.engagementRate} className=\"mt-2\" />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-blue-500 mb-2\">{creatorStats.averageReadTime}</div>\n                    <div className=\"text-sm text-muted-foreground\">Avg. Read Time (min)</div>\n                    <Progress value={creatorStats.averageReadTime * 10} className=\"mt-2\" />\n                  </div>\n                  <div className=\"text-center\">\n                    <div className=\"text-3xl font-bold text-purple-500 mb-2\">{creatorStats.postsPublished}</div>\n                    <div className=\"text-sm text-muted-foreground\">Posts Published</div>\n                    <Progress value={Math.min(creatorStats.postsPublished * 2, 100)} className=\"mt-2\" />\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </TabsContent>\n\n        {/* Content Tab */}\n        <TabsContent value=\"content\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-2xl font-bold\">Top Performing Content</h2>\n              <Button data-testid=\"button-new-post\">\n                <PenTool className=\"w-4 h-4 mr-2\" />\n                New Post\n              </Button>\n            </div>\n\n            <div className=\"space-y-4\">\n              {(displayPosts.length > 0 ? displayPosts : fallbackTopPosts).map((post, index) => (\n                <motion.div\n                  key={post.id}\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  <Card className=\"hover:shadow-lg transition-all duration-300\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex justify-between items-start mb-4\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            {getStatusBadge(post.status)}\n                            <Badge variant=\"outline\">{post.category}</Badge>\n                          </div>\n                          <h3 className=\"text-lg font-bold text-foreground mb-2\">{post.title}</h3>\n                          <p className=\"text-sm text-muted-foreground\">\n                            Published on {new Date(post.publishedAt).toLocaleDateString()}\n                          </p>\n                        </div>\n                        <div className=\"flex space-x-2\">\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Share2 className=\"w-4 h-4 mr-2\" />\n                            Share\n                          </Button>\n                          <Button variant=\"outline\" size=\"sm\">\n                            <Settings className=\"w-4 h-4\" />\n                          </Button>\n                        </div>\n                      </div>\n\n                      <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4 text-center\">\n                        <div>\n                          <div className=\"text-xl font-bold text-blue-500\">{post.views.toLocaleString()}</div>\n                          <div className=\"text-xs text-muted-foreground\">Views</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xl font-bold text-green-500\">{post.likes}</div>\n                          <div className=\"text-xs text-muted-foreground\">Likes</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xl font-bold text-purple-500\">{post.comments}</div>\n                          <div className=\"text-xs text-muted-foreground\">Comments</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xl font-bold text-orange-500\">{post.shares}</div>\n                          <div className=\"text-xs text-muted-foreground\">Shares</div>\n                        </div>\n                        <div>\n                          <div className=\"text-xl font-bold text-yellow-500\">${post.earnings}</div>\n                          <div className=\"text-xs text-muted-foreground\">Earned</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </TabsContent>\n\n        {/* Achievements Tab */}\n        <TabsContent value=\"achievements\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-2xl font-bold mb-6\">Your Achievements</h2>\n            \n            <div className=\"grid md:grid-cols-2 gap-6\">\n              {achievements.map((achievement, index) => (\n                <motion.div\n                  key={achievement.id}\n                  initial={{ opacity: 0, scale: 0.9 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                >\n                  <Card className={`${achievement.earned ? 'bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-950/20 dark:to-orange-950/20 border-yellow-200' : 'bg-muted/30'} transition-all duration-300 hover:scale-105`}>\n                    <CardContent className=\"p-6 text-center\">\n                      <div className={`w-16 h-16 bg-gradient-to-br ${achievement.color} rounded-2xl flex items-center justify-center mx-auto mb-4 ${!achievement.earned && 'grayscale opacity-50'}`}>\n                        <achievement.icon className=\"w-8 h-8 text-white\" />\n                      </div>\n                      \n                      <h3 className=\"text-lg font-bold text-foreground mb-2\">{achievement.title}</h3>\n                      <p className=\"text-sm text-muted-foreground mb-4\">{achievement.description}</p>\n                      \n                      {achievement.earned ? (\n                        <Badge className=\"bg-green-500 text-white\">\n                          <Star className=\"w-3 h-3 mr-1\" />\n                          Earned {new Date(achievement.earnedAt!).toLocaleDateString()}\n                        </Badge>\n                      ) : (\n                        <div className=\"space-y-2\">\n                          <Progress value={achievement.progress} className=\"w-full\" />\n                          <Badge variant=\"outline\">{achievement.progress}% Complete</Badge>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n          </motion.div>\n        </TabsContent>\n\n        {/* Monetization Tab */}\n        <TabsContent value=\"monetization\" className=\"space-y-6\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n          >\n            <h2 className=\"text-2xl font-bold mb-6\">Monetization Hub</h2>\n            \n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <Card className=\"bg-gradient-to-br from-green-50 to-emerald-50 dark:from-green-950/20 dark:to-emerald-950/20\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <DollarSign className=\"w-5 h-5 mr-2 text-green-500\" />\n                    Total Earnings\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-green-500 mb-2\">${creatorStats.totalEarnings}</div>\n                  <div className=\"text-sm text-muted-foreground mb-4\">This month</div>\n                  <Button className=\"w-full\" data-testid=\"button-withdraw\">\n                    <Download className=\"w-4 h-4 mr-2\" />\n                    Withdraw\n                  </Button>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <Target className=\"w-5 h-5 mr-2\" />\n                    Monthly Goal\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-foreground mb-2\">$2,000</div>\n                  <div className=\"text-sm text-muted-foreground mb-4\">72.8% achieved</div>\n                  <Progress value={72.8} className=\"mb-4\" />\n                  <div className=\"text-xs text-muted-foreground\">$544 to go</div>\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"w-5 h-5 mr-2\" />\n                    Growth Rate\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-3xl font-bold text-blue-500 mb-2\">+34%</div>\n                  <div className=\"text-sm text-muted-foreground mb-4\">vs last month</div>\n                  <Badge className=\"bg-green-500 text-white\">\n                    <TrendingUp className=\"w-3 h-3 mr-1\" />\n                    Growing\n                  </Badge>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Recent Activity */}\n            <Card>\n              <CardHeader>\n                <CardTitle>Recent Activity</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  {recentActivity.map((activity, index) => (\n                    <div key={index} className=\"flex items-center space-x-3 p-3 rounded-lg bg-muted/30\">\n                      <div className={`w-8 h-8 rounded-full flex items-center justify-center ${\n                        activity.type === 'like' ? 'bg-red-100 text-red-500' :\n                        activity.type === 'comment' ? 'bg-blue-100 text-blue-500' :\n                        activity.type === 'follow' ? 'bg-green-100 text-green-500' :\n                        activity.type === 'earning' ? 'bg-yellow-100 text-yellow-500' :\n                        'bg-purple-100 text-purple-500'\n                      }`}>\n                        {activity.type === 'like' && <Heart className=\"w-4 h-4\" />}\n                        {activity.type === 'comment' && <MessageCircle className=\"w-4 h-4\" />}\n                        {activity.type === 'follow' && <Users className=\"w-4 h-4\" />}\n                        {activity.type === 'earning' && <DollarSign className=\"w-4 h-4\" />}\n                        {activity.type === 'feature' && <Star className=\"w-4 h-4\" />}\n                      </div>\n                      <div className=\"flex-1\">\n                        <p className=\"text-sm text-foreground\">{activity.content}</p>\n                        <p className=\"text-xs text-muted-foreground\">{activity.time}</p>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}","size_bytes":25280},"client/src/components/enhanced-blog-reader.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { SocialFeatures } from './social-features';\nimport { \n  Clock, \n  Eye, \n  User, \n  Crown,\n  Share2,\n  Bookmark,\n  ArrowLeft,\n  ArrowRight,\n  Hash,\n  Type,\n  Palette,\n  Moon,\n  Sun,\n  Headphones,\n  Download,\n  Zap,\n  Target\n} from 'lucide-react';\nimport { BlogPost } from '@shared/schema';\n\ninterface EnhancedBlogReaderProps {\n  post: BlogPost;\n}\n\nexport function EnhancedBlogReader({ post }: EnhancedBlogReaderProps) {\n  const [readingProgress, setReadingProgress] = useState(0);\n  const [readingTime, setReadingTime] = useState(0);\n  const [fontSize, setFontSize] = useState(16);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isNightMode, setIsNightMode] = useState(false);\n\n  // Calculate reading progress\n  useEffect(() => {\n    const handleScroll = () => {\n      const totalHeight = document.documentElement.scrollHeight - window.innerHeight;\n      const progress = (window.scrollY / totalHeight) * 100;\n      setReadingProgress(Math.min(progress, 100));\n    };\n\n    const startTime = Date.now();\n    const interval = setInterval(() => {\n      setReadingTime(Math.floor((Date.now() - startTime) / 1000));\n    }, 1000);\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      clearInterval(interval);\n    };\n  }, []);\n\n  const formatReadingTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const relatedPosts = [\n    {\n      id: '1',\n      title: 'Advanced DeFi Strategies for 2024',\n      readingTime: 8,\n      author: 'DeFi Expert',\n      similarity: 92\n    },\n    {\n      id: '2',\n      title: 'Understanding Liquid Staking Derivatives',\n      readingTime: 6,\n      author: 'Staking Pro',\n      similarity: 87\n    },\n    {\n      id: '3',\n      title: 'Cross-Chain Bridge Security Analysis',\n      readingTime: 12,\n      author: 'Security Researcher',\n      similarity: 84\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Reading Progress Bar */}\n      <div className=\"fixed top-0 left-0 w-full h-1 bg-muted z-50\">\n        <div \n          className=\"h-full bg-gradient-to-r from-primary to-purple-600 transition-all duration-150 ease-out\"\n          style={{ width: `${readingProgress}%` }}\n        />\n      </div>\n\n      {/* Floating Reading Controls */}\n      <motion.div\n        className=\"fixed left-6 top-1/2 transform -translate-y-1/2 space-y-3 z-40 hidden lg:block\"\n        initial={{ opacity: 0, x: -20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.6, delay: 0.5 }}\n      >\n        <Card className=\"p-3 bg-card/80 backdrop-blur-sm border-border/50\">\n          <div className=\"space-y-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setFontSize(Math.max(fontSize - 2, 12))}\n              data-testid=\"button-decrease-font\"\n            >\n              <Type className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setFontSize(Math.min(fontSize + 2, 24))}\n              data-testid=\"button-increase-font\"\n            >\n              <Type className=\"w-5 h-5\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsDarkMode(!isDarkMode)}\n              data-testid=\"button-toggle-theme\"\n            >\n              {isDarkMode ? <Sun className=\"w-4 h-4\" /> : <Moon className=\"w-4 h-4\" />}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              data-testid=\"button-text-to-speech\"\n            >\n              <Headphones className=\"w-4 h-4\" />\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              data-testid=\"button-download-pdf\"\n            >\n              <Download className=\"w-4 h-4\" />\n            </Button>\n          </div>\n        </Card>\n      </motion.div>\n\n      {/* Reading Stats */}\n      <motion.div\n        className=\"fixed right-6 top-1/2 transform -translate-y-1/2 z-40 hidden lg:block\"\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.6, delay: 0.7 }}\n      >\n        <Card className=\"p-4 bg-card/80 backdrop-blur-sm border-border/50\">\n          <div className=\"space-y-4 text-center\">\n            <div>\n              <div className=\"text-sm font-medium text-foreground\">{Math.round(readingProgress)}%</div>\n              <div className=\"text-xs text-muted-foreground\">Read</div>\n            </div>\n            <div>\n              <div className=\"text-sm font-medium text-foreground\">{formatReadingTime(readingTime)}</div>\n              <div className=\"text-xs text-muted-foreground\">Time</div>\n            </div>\n            <div>\n              <div className=\"text-sm font-medium text-foreground\">{post.views || 0}</div>\n              <div className=\"text-xs text-muted-foreground\">Views</div>\n            </div>\n          </div>\n        </Card>\n      </motion.div>\n\n      <div className=\"max-w-4xl mx-auto px-6 py-12\">\n        {/* Article Header */}\n        <motion.div\n          className=\"mb-12\"\n          initial={{ opacity: 0, y: 30 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n        >\n          {/* Breadcrumb */}\n          <div className=\"flex items-center space-x-2 text-sm text-muted-foreground mb-6\">\n            <ArrowLeft className=\"w-4 h-4\" />\n            <button className=\"hover:text-foreground transition-colors\">Back to Blogs</button>\n            <span>/</span>\n            <span>{post.category || 'Article'}</span>\n          </div>\n\n          {/* Article Meta */}\n          <div className=\"flex flex-wrap items-center gap-3 mb-6\">\n            <Badge className=\"bg-gradient-to-r from-primary to-purple-600 text-white\">\n              Featured\n            </Badge>\n            <Badge variant=\"outline\">{post.category || 'Technology'}</Badge>\n            <div className=\"flex items-center space-x-1 text-sm text-muted-foreground\">\n              <Clock className=\"w-4 h-4\" />\n              <span>{post.readingTime || 8} min read</span>\n            </div>\n            <div className=\"flex items-center space-x-1 text-sm text-muted-foreground\">\n              <Eye className=\"w-4 h-4\" />\n              <span>{(post.views || 0).toLocaleString()} views</span>\n            </div>\n          </div>\n\n          {/* Title */}\n          <h1 \n            className=\"text-4xl md:text-5xl font-bold text-foreground mb-6 leading-tight\"\n            style={{ fontSize: `${fontSize + 16}px` }}\n          >\n            {post.title}\n          </h1>\n\n          {/* Author Info */}\n          <div className=\"flex items-center justify-between mb-8\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"w-12 h-12 bg-gradient-to-br from-primary to-purple-600 rounded-full flex items-center justify-center\">\n                <User className=\"w-6 h-6 text-white\" />\n              </div>\n              <div>\n                <div className=\"flex items-center space-x-2\">\n                  <h3 className=\"font-semibold text-foreground\">Anonymous Creator</h3>\n                  <Crown className=\"w-4 h-4 text-yellow-500\" />\n                </div>\n                <p className=\"text-sm text-muted-foreground font-mono\">\n                  {post.author.slice(0, 6)}...{post.author.slice(-4)}\n                </p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Published {new Date(post.createdAt).toLocaleDateString()}\n                </p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Button variant=\"outline\" size=\"sm\">\n                Follow\n              </Button>\n              <Button size=\"sm\" className=\"bg-gradient-to-r from-primary to-purple-600\">\n                <Zap className=\"w-4 h-4 mr-2\" />\n                Tip\n              </Button>\n            </div>\n          </div>\n\n          {/* Cover Image */}\n          {post.coverImage && (\n            <div className=\"w-full h-64 md:h-80 bg-gradient-to-br from-primary/20 to-purple-600/20 rounded-2xl mb-8 overflow-hidden\">\n              <div className=\"w-full h-full flex items-center justify-center\">\n                <span className=\"text-6xl\">📝</span>\n              </div>\n            </div>\n          )}\n\n          {/* AI Summary */}\n          <Card className=\"mb-8 bg-gradient-to-r from-blue-50 to-cyan-50 dark:from-blue-950/20 dark:to-cyan-950/20 border-blue-200 dark:border-blue-800\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-start space-x-3\">\n                <div className=\"w-8 h-8 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                  <Zap className=\"w-4 h-4 text-white\" />\n                </div>\n                <div>\n                  <h4 className=\"font-semibold text-foreground mb-2\">AI Summary</h4>\n                  <p className=\"text-muted-foreground text-sm leading-relaxed\">\n                    {post.aiGeneratedSummary || post.excerpt}\n                  </p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </motion.div>\n\n        {/* Article Content */}\n        <motion.div\n          className=\"prose prose-lg max-w-none mb-12\"\n          style={{ fontSize: `${fontSize}px` }}\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8, delay: 0.2 }}\n        >\n          <div className=\"text-muted-foreground leading-relaxed space-y-6\">\n            {post.content.split('\\n\\n').map((paragraph, index) => (\n              <p key={index} className=\"mb-6\">\n                {paragraph}\n              </p>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Tags */}\n        {post.tags && post.tags.length > 0 && (\n          <motion.div\n            className=\"mb-8\"\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6, delay: 0.4 }}\n          >\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <Hash className=\"w-5 h-5 text-muted-foreground\" />\n              <h3 className=\"font-semibold text-foreground\">Tags</h3>\n            </div>\n            <div className=\"flex flex-wrap gap-2\">\n              {post.tags.map((tag, index) => (\n                <Badge\n                  key={index}\n                  variant=\"outline\"\n                  className=\"hover:bg-primary hover:text-primary-foreground transition-colors cursor-pointer\"\n                  data-testid={`tag-${tag}`}\n                >\n                  #{tag}\n                </Badge>\n              ))}\n            </div>\n          </motion.div>\n        )}\n\n        {/* Social Features */}\n        <motion.div\n          className=\"mb-12\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.6 }}\n        >\n          <SocialFeatures \n            postId={post.id}\n            initialLikes={post.likes}\n            initialComments={post.comments}\n            initialShares={post.shares}\n          />\n        </motion.div>\n\n        {/* Related Posts */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.8 }}\n        >\n          <h3 className=\"text-2xl font-bold text-foreground mb-6 flex items-center\">\n            <Target className=\"w-6 h-6 mr-2\" />\n            Related Articles\n          </h3>\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            {relatedPosts.map((relatedPost, index) => (\n              <motion.div\n                key={relatedPost.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: 0.9 + index * 0.1 }}\n              >\n                <Card className=\"hover:shadow-lg transition-all duration-300 hover:-translate-y-1 cursor-pointer\">\n                  <CardContent className=\"p-6\">\n                    <div className=\"w-full h-32 bg-gradient-to-br from-primary/20 to-purple-600/20 rounded-xl mb-4\" />\n                    <h4 className=\"font-semibold text-foreground mb-2 line-clamp-2\">\n                      {relatedPost.title}\n                    </h4>\n                    <div className=\"flex items-center justify-between text-sm text-muted-foreground\">\n                      <span>{relatedPost.author}</span>\n                      <div className=\"flex items-center space-x-2\">\n                        <Clock className=\"w-3 h-3\" />\n                        <span>{relatedPost.readingTime} min</span>\n                      </div>\n                    </div>\n                    <div className=\"mt-3\">\n                      <Badge variant=\"outline\" className=\"text-xs\">\n                        {relatedPost.similarity}% similar\n                      </Badge>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        {/* Navigation */}\n        <motion.div\n          className=\"flex justify-between items-center mt-12 pt-8 border-t border-border\"\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 1 }}\n        >\n          <Button variant=\"outline\" className=\"flex items-center space-x-2\">\n            <ArrowLeft className=\"w-4 h-4\" />\n            <span>Previous Article</span>\n          </Button>\n          <Button variant=\"outline\" className=\"flex items-center space-x-2\">\n            <span>Next Article</span>\n            <ArrowRight className=\"w-4 h-4\" />\n          </Button>\n        </motion.div>\n      </div>\n    </div>\n  );\n}","size_bytes":14379},"client/src/components/social-features.tsx":{"content":"import { motion } from 'framer-motion';\nimport { useState } from 'react';\nimport { useQuery, useMutation } from '@tanstack/react-query';\nimport { apiRequest, queryClient } from '@/lib/queryClient';\nimport { Comment } from '@shared/schema';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Textarea } from '@/components/ui/textarea';\nimport { \n  Heart, \n  MessageCircle, \n  Share2, \n  Bookmark,\n  User,\n  UserPlus,\n  Users,\n  Crown,\n  Zap,\n  ArrowUp,\n  ArrowDown,\n  Reply,\n  Flag,\n  Gift,\n  Star\n} from 'lucide-react';\n\ninterface SocialFeaturesProps {\n  postId: string;\n  initialLikes?: number;\n  initialComments?: number;\n  initialShares?: number;\n}\n\nexport function SocialFeatures({ postId, initialLikes = 0, initialComments = 0, initialShares = 0 }: SocialFeaturesProps) {\n  const [liked, setLiked] = useState(false);\n  const [bookmarked, setBookmarked] = useState(false);\n  const [showComments, setShowComments] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [likes, setLikes] = useState(initialLikes);\n  const [comments, setComments] = useState(initialComments);\n  const [shares, setShares] = useState(initialShares);\n\n  // Fetch real comments data using correct endpoint\n  const { data: realComments = [], isLoading: commentsLoading } = useQuery<Comment[]>({\n    queryKey: ['/api/comments/post', postId],\n    queryFn: async () => {\n      const response = await fetch(`/api/comments/post/${postId}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch comments');\n      }\n      return response.json();\n    },\n    enabled: showComments,\n  });\n\n  // Mutations for interactions using correct endpoints\n  const likeMutation = useMutation({\n    mutationFn: async () => {\n      return apiRequest('/api/likes', {\n        method: 'POST',\n        body: JSON.stringify({\n          postId,\n          userId: 'current-user-id', // This would come from auth context\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/blog-posts'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/likes/post', postId] });\n      setLiked(!liked);\n      setLikes(liked ? likes - 1 : likes + 1);\n    },\n  });\n\n  const commentMutation = useMutation({\n    mutationFn: async (content: string) => {\n      return apiRequest(`/api/comments`, {\n        method: 'POST',\n        body: JSON.stringify({\n          postId,\n          content,\n          authorId: 'current-user-id', // This would come from auth context\n        }),\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/comments/post', postId] });\n      setNewComment('');\n      setComments(comments + 1);\n    },\n  });\n\n  const handleLike = () => {\n    likeMutation.mutate();\n  };\n\n  const handleComment = () => {\n    if (newComment.trim()) {\n      commentMutation.mutate(newComment);\n    }\n  };\n\n  const handleShare = () => {\n    // Implement sharing functionality - could track in analytics\n    setShares(shares + 1);\n    \n    if (navigator.share) {\n      navigator.share({\n        title: 'Check out this amazing Web3 article!',\n        url: window.location.href,\n      }).catch(() => {\n        // Fallback: copy to clipboard\n        navigator.clipboard.writeText(window.location.href);\n      });\n    } else {\n      // Fallback: copy to clipboard\n      navigator.clipboard.writeText(window.location.href);\n    }\n  };\n\n  // Use real comments or fallback data for display\n  const displayComments = realComments.length > 0 ? realComments : [];\n\n  const topContributors = [\n    {\n      id: '1',\n      name: 'Vitalik Buterin',\n      wallet: '0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045',\n      avatar: '/api/placeholder/32/32',\n      posts: 234,\n      followers: 156000,\n      isVerified: true,\n      specialBadge: 'Ethereum Founder'\n    },\n    {\n      id: '2',\n      name: 'Stani Kulechov',\n      wallet: '0x8ba1f109551bD432803012645Hac136c22C256e9',\n      avatar: '/api/placeholder/32/32',\n      posts: 189,\n      followers: 89000,\n      isVerified: true,\n      specialBadge: 'Aave Founder'\n    },\n    {\n      id: '3',\n      name: 'Andre Cronje',\n      wallet: '0x431e81E5dfB5A24541b5Ff8762bDEF3f32F96354',\n      avatar: '/api/placeholder/32/32',\n      posts: 156,\n      followers: 67000,\n      isVerified: true,\n      specialBadge: 'DeFi Pioneer'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Social Actions */}\n      <motion.div\n        className=\"flex items-center justify-between p-6 bg-card/50 backdrop-blur-sm rounded-2xl border border-border/50\"\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"flex items-center space-x-6\">\n          <motion.button\n            className={`flex items-center space-x-2 px-4 py-2 rounded-xl transition-all duration-200 hover:scale-105 ${\n              liked \n                ? 'bg-red-100 text-red-600 dark:bg-red-950/30 dark:text-red-400' \n                : 'bg-muted hover:bg-muted/80'\n            }`}\n            onClick={handleLike}\n            whileTap={{ scale: 0.95 }}\n            data-testid=\"button-like\"\n          >\n            <Heart className={`w-5 h-5 ${liked ? 'fill-current' : ''}`} />\n            <span className=\"font-medium\">{likes}</span>\n          </motion.button>\n\n          <motion.button\n            className=\"flex items-center space-x-2 px-4 py-2 rounded-xl bg-muted hover:bg-muted/80 transition-all duration-200 hover:scale-105\"\n            onClick={() => setShowComments(!showComments)}\n            whileTap={{ scale: 0.95 }}\n            data-testid=\"button-comments\"\n          >\n            <MessageCircle className=\"w-5 h-5\" />\n            <span className=\"font-medium\">{comments}</span>\n          </motion.button>\n\n          <motion.button\n            className=\"flex items-center space-x-2 px-4 py-2 rounded-xl bg-muted hover:bg-muted/80 transition-all duration-200 hover:scale-105\"\n            onClick={handleShare}\n            whileTap={{ scale: 0.95 }}\n            data-testid=\"button-share\"\n          >\n            <Share2 className=\"w-5 h-5\" />\n            <span className=\"font-medium\">{shares}</span>\n          </motion.button>\n        </div>\n\n        <div className=\"flex items-center space-x-3\">\n          <motion.button\n            className={`p-2 rounded-xl transition-all duration-200 hover:scale-105 ${\n              bookmarked \n                ? 'bg-yellow-100 text-yellow-600 dark:bg-yellow-950/30 dark:text-yellow-400' \n                : 'bg-muted hover:bg-muted/80'\n            }`}\n            onClick={() => setBookmarked(!bookmarked)}\n            whileTap={{ scale: 0.95 }}\n            data-testid=\"button-bookmark\"\n          >\n            <Bookmark className={`w-5 h-5 ${bookmarked ? 'fill-current' : ''}`} />\n          </motion.button>\n\n          <Button size=\"sm\" className=\"bg-gradient-to-r from-primary to-purple-600 hover:from-primary/90 hover:to-purple-600/90\">\n            <Gift className=\"w-4 h-4 mr-2\" />\n            Tip Author\n          </Button>\n        </div>\n      </motion.div>\n\n      {/* Comments Section */}\n      {showComments && (\n        <motion.div\n          className=\"space-y-6\"\n          initial={{ opacity: 0, height: 0 }}\n          animate={{ opacity: 1, height: 'auto' }}\n          exit={{ opacity: 0, height: 0 }}\n          transition={{ duration: 0.3 }}\n        >\n          {/* Add Comment */}\n          <Card className=\"border-0 bg-card/50 backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"space-y-4\">\n                <Textarea\n                  placeholder=\"Share your thoughts...\"\n                  value={newComment}\n                  onChange={(e) => setNewComment(e.target.value)}\n                  className=\"min-h-[100px] resize-none border-0 bg-muted/50 focus:bg-muted/80\"\n                  data-testid=\"textarea-new-comment\"\n                />\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\n                    <span>💡 Tip: Quality comments earn more engagement</span>\n                  </div>\n                  <Button onClick={handleComment} disabled={!newComment.trim()} data-testid=\"button-post-comment\">\n                    Post Comment\n                  </Button>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Comments List */}\n          <div className=\"space-y-4\">\n            {commentsLoading ? (\n              // Loading skeleton for comments\n              [...Array(3)].map((_, index) => (\n                <div key={index} className=\"animate-pulse\">\n                  <Card className=\"border-0 bg-card/50 backdrop-blur-sm\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"w-10 h-10 bg-muted rounded-full\" />\n                        <div className=\"flex-1 space-y-3\">\n                          <div className=\"h-4 bg-muted rounded w-1/3\" />\n                          <div className=\"h-16 bg-muted rounded\" />\n                          <div className=\"flex space-x-4\">\n                            <div className=\"h-3 bg-muted rounded w-12\" />\n                            <div className=\"h-3 bg-muted rounded w-12\" />\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </div>\n              ))\n            ) : displayComments.length > 0 ? (\n              displayComments.map((comment, index) => (\n              <motion.div\n                key={comment.id}\n                initial={{ opacity: 0, x: -20 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n              >\n                <Card className={`border-0 bg-card/50 backdrop-blur-sm ${comment.isHighlighted ? 'ring-2 ring-primary/20 bg-primary/5' : ''}`}>\n                  <CardContent className=\"p-6\">\n                    <div className=\"flex items-start space-x-4\">\n                      <Avatar className=\"w-10 h-10\">\n                        <AvatarImage src={comment.avatar} />\n                        <AvatarFallback>{comment.author[0]}</AvatarFallback>\n                      </Avatar>\n\n                      <div className=\"flex-1 space-y-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <h4 className=\"font-semibold text-foreground flex items-center\">\n                            {comment.authorId}\n                          </h4>\n                          <span className=\"text-xs text-muted-foreground\">\n                            {new Date(comment.createdAt).toLocaleDateString()}\n                          </span>\n                        </div>\n\n                        <p className=\"text-muted-foreground leading-relaxed\">{comment.content}</p>\n\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-4\">\n                            <button className=\"flex items-center space-x-1 text-sm text-muted-foreground hover:text-foreground transition-colors\">\n                              <ArrowUp className=\"w-4 h-4\" />\n                              <span>{comment.likes || 0}</span>\n                            </button>\n                            <button className=\"flex items-center space-x-1 text-sm text-muted-foreground hover:text-foreground transition-colors\">\n                              <Reply className=\"w-4 h-4\" />\n                              <span>Reply</span>\n                            </button>\n                          </div>\n                          <button className=\"text-muted-foreground hover:text-foreground transition-colors\">\n                            <Flag className=\"w-4 h-4\" />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            ))\n            ) : (\n              <Card className=\"border-0 bg-card/50 backdrop-blur-sm\">\n                <CardContent className=\"p-8 text-center\">\n                  <MessageCircle className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                  <h3 className=\"text-lg font-semibold mb-2\">No comments yet</h3>\n                  <p className=\"text-muted-foreground\">Be the first to share your thoughts!</p>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </motion.div>\n      )}\n\n      {/* Top Contributors Sidebar */}\n      <motion.div\n        initial={{ opacity: 0, x: 20 }}\n        animate={{ opacity: 1, x: 0 }}\n        transition={{ duration: 0.6, delay: 0.3 }}\n      >\n        <Card className=\"border-0 bg-gradient-to-br from-card/80 to-card/40 backdrop-blur-sm\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center\">\n              <Users className=\"w-5 h-5 mr-2\" />\n              Top Contributors\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            {topContributors.map((contributor, index) => (\n              <motion.div\n                key={contributor.id}\n                className=\"flex items-center justify-between p-3 rounded-xl hover:bg-muted/50 transition-colors cursor-pointer\"\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                data-testid={`contributor-${contributor.id}`}\n              >\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"relative\">\n                    <Avatar className=\"w-8 h-8\">\n                      <AvatarImage src={contributor.avatar} />\n                      <AvatarFallback>{contributor.name[0]}</AvatarFallback>\n                    </Avatar>\n                    {contributor.isVerified && (\n                      <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-primary rounded-full flex items-center justify-center\">\n                        <Crown className=\"w-2.5 h-2.5 text-white\" />\n                      </div>\n                    )}\n                  </div>\n                  <div>\n                    <p className=\"font-medium text-sm\">{contributor.name}</p>\n                    <p className=\"text-xs text-muted-foreground\">{contributor.specialBadge}</p>\n                  </div>\n                </div>\n                <Button variant=\"outline\" size=\"sm\" className=\"h-7 px-3\">\n                  <UserPlus className=\"w-3 h-3 mr-1\" />\n                  Follow\n                </Button>\n              </motion.div>\n            ))}\n          </CardContent>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}","size_bytes":15239},"client/src/pages/dashboard.tsx":{"content":"import { Navigation } from '@/components/navigation';\nimport { Footer } from '@/components/footer';\nimport { CreatorDashboard } from '@/components/creator-dashboard';\n\nexport default function Dashboard() {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Navigation />\n      <div className=\"pt-20\">\n        <CreatorDashboard />\n      </div>\n      <Footer />\n    </div>\n  );\n}","size_bytes":393},"client/src/pages/post-detail.tsx":{"content":"import { useParams } from 'wouter';\nimport { useQuery } from '@tanstack/react-query';\nimport { BlogPost } from '@shared/schema';\nimport { EnhancedBlogReader } from '@/components/enhanced-blog-reader';\nimport { SocialFeatures } from '@/components/social-features';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { CalendarIcon, ClockIcon, EyeIcon, UserIcon } from 'lucide-react';\n\nexport default function PostDetail() {\n  const { id } = useParams<{ id: string }>();\n\n  const { data: post, isLoading, error } = useQuery<BlogPost>({\n    queryKey: ['/api/blog-posts', id],\n    queryFn: async () => {\n      const response = await fetch(`/api/blog-posts/${id}`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch post');\n      }\n      return response.json();\n    },\n    enabled: !!id,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5\">\n        <div className=\"max-w-4xl mx-auto p-6 pt-20\">\n          <div className=\"animate-pulse space-y-6\">\n            <div className=\"h-8 bg-muted rounded w-3/4\" />\n            <div className=\"h-4 bg-muted rounded w-1/2\" />\n            <div className=\"h-64 bg-muted rounded\" />\n            <div className=\"space-y-2\">\n              <div className=\"h-4 bg-muted rounded\" />\n              <div className=\"h-4 bg-muted rounded w-5/6\" />\n              <div className=\"h-4 bg-muted rounded w-4/6\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !post) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5\">\n        <div className=\"max-w-4xl mx-auto p-6 pt-20\">\n          <Card>\n            <CardContent className=\"p-8 text-center\">\n              <h1 className=\"text-2xl font-bold mb-4\">Post Not Found</h1>\n              <p className=\"text-muted-foreground\">\n                The blog post you're looking for doesn't exist or has been removed.\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-background via-background to-primary/5\">\n      <div className=\"max-w-4xl mx-auto p-6 pt-20\">\n        {/* Post Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-4xl font-bold text-foreground mb-4\" data-testid=\"post-title\">\n            {post.title}\n          </h1>\n          \n          {post.excerpt && (\n            <p className=\"text-xl text-muted-foreground mb-6\">\n              {post.excerpt}\n            </p>\n          )}\n\n          <div className=\"flex items-center space-x-6 text-sm text-muted-foreground mb-6\">\n            <div className=\"flex items-center space-x-2\">\n              <UserIcon className=\"w-4 h-4\" />\n              <span>{post.author}</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <CalendarIcon className=\"w-4 h-4\" />\n              <span>{post.publishedAt ? new Date(post.publishedAt).toLocaleDateString() : 'No date'}</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <ClockIcon className=\"w-4 h-4\" />\n              <span>{post.readingTime || 5} min read</span>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <EyeIcon className=\"w-4 h-4\" />\n              <span>{post.views || 0} views</span>\n            </div>\n          </div>\n\n          {/* Tags */}\n          {post.tags && post.tags.length > 0 && (\n            <div className=\"flex flex-wrap gap-2 mb-6\">\n              {post.tags.map((tag) => (\n                <Badge key={tag} variant=\"secondary\">\n                  {tag}\n                </Badge>\n              ))}\n            </div>\n          )}\n        </div>\n\n        {/* Post Content */}\n        <div className=\"mb-8\">\n          <EnhancedBlogReader post={post} />\n        </div>\n\n        {/* Social Features */}\n        <div className=\"mb-8\">\n          <SocialFeatures \n            postId={post.id}\n            initialLikes={post.likes || 0}\n            initialComments={post.comments || 0}\n            initialShares={post.shares || 0}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4302}},"version":1}